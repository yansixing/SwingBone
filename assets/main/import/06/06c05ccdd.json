[1,["1baf0fc9-befa-459c-8bdd-af1a450a0319","1f493664-2119-47c4-8e64-4e9cc7bbda87","66fb0293-5837-4173-b6d1-405b66b92a02@6c48a","cd857ef7-318f-4512-a50b-ca260e1a86dd@6c48a","bdb31268-7db4-42a5-8891-1f4ed43c8af3","20835ba4-6145-4fbc-a58a-051ce700aa3e@f9941","eb41d86b-078a-431a-bd80-4350748c500e@6c48a","abb7f717-3426-4143-82f0-1bcd6cf4906f@6c48a","d3c7820c-2a98-4429-8bc7-b8453bc9ac41","200d5383-15fb-4bff-a2af-80a9ecfc5a66","f12a23c4-b924-4322-a260-3d982428f1e8@f9941","11bdc4b0-64a8-4eb7-a2a7-9fb9e233e977@f9941","11bdc4b0-64a8-4eb7-a2a7-9fb9e233e977@6c48a","158e7e52-3220-4cd7-9694-713e0e6e8278@6c48a","1ecd350a-3bc8-4bf3-ad7f-517743b8a921@6c48a","20835ba4-6145-4fbc-a58a-051ce700aa3e@6c48a","28765e2f-040a-4c65-8e8c-f9d0bb79d863@6c48a","1263d74c-8167-4928-91a6-4e2672411f47@a804a","32abc055-8873-4eb5-a0d6-cf6663d4b44b","2c52c9a5-0e19-462f-a904-577598c1585c","5d779a00-bafa-4012-84ff-9d5ef7898a69","5053e5b2-d16d-4b1d-881d-5f59b0c60bb6","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@c470f","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@30732","fa6d0162-07fb-496b-aac5-6549d6891858","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@7f45f","15048d8c-46ee-4514-adde-55a3e240b695","69620924-22e7-406e-8230-aa333dd5fb84","4b759a35-0ef4-4e77-9580-39a155cdb3b1","db1701ac-22e8-4dec-a7aa-db9ae4596a02","6c17aa46-e896-4e4e-aa4c-2f8f21003f71","a2a55bf1-a332-4b7a-b369-aeaadcef05d7","4f6db08a-ebd4-4825-9508-378d71523e5e","f96437d4-8c6c-4539-970a-2e90276f82ba","d04cd379-3568-4422-97c8-f647e6ebc526","69270647-e08b-4ada-abcd-58747f64fc79","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@23dd1","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@f1394","86449951-2969-4453-bff1-b06571d04336","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@14938","cd413b5c-ac0f-419f-bb6a-fb0ca671fd25@75ee4","28765e2f-040a-4c65-8e8c-f9d0bb79d863@f9941","1ecd350a-3bc8-4bf3-ad7f-517743b8a921@f9941","1263d74c-8167-4928-91a6-4e2672411f47@8abdc","158e7e52-3220-4cd7-9694-713e0e6e8278@f9941","544e49d6-3f05-4fa8-9a9e-091f98fc2ce8@f9941","951249e0-9f16-456d-8b85-a6ca954da16b@f9941","544e49d6-3f05-4fa8-9a9e-091f98fc2ce8@6c48a","951249e0-9f16-456d-8b85-a6ca954da16b@6c48a","f12a23c4-b924-4322-a260-3d982428f1e8@6c48a"],["_parent","node","_effectAsset","mainTexture","_textureSource","_spriteFrame","_mesh","_skeleton","_normalSprite","label","_cameraComponent","handNode","btnNext","model","toggle","slider","_target","scene","_hoverSprite","_pressedSprite","_disabledSprite"],[["cc.Node",["_name","_id","_layer","_active","_parent","_components","_lpos","_children","_lrot","_euler","_lscale"],-1,1,9,5,2,5,5,5],"cc.SpriteFrame",["cc.Widget",["_alignFlags","_top","_left","_right","_originalWidth","_horizontalCenter","_originalHeight","_bottom","node","__prefab"],-5,1,4],["cc.Node",["_name","_layer","_parent","_children","_lpos","_components"],1,1,12,5,12],["cc.Sprite",["_sizeMode","_type","_enabled","_isTrimmedMode","node","_spriteFrame","__prefab"],-1,1,6,4],["cc.Label",["_actualFontSize","_fontSize","_string","_isBold","_overflow","_enableWrapText","node","__prefab","_color"],-3,1,4,5],["cc.Node",["_name","_lpos","_children","_parent","_components"],2,5,9,1,2],["cc.UITransform",["node","_contentSize","__prefab"],3,1,5,4],["cc.Material",["_defines","_states","_props"],1,12],["cc.Node",["_name","_layer","_active","_parent","_children","_components","_lpos"],0,1,2,12,5],["cc.Button",["_transition","_zoomScale","node","_normalColor","_target","__prefab","_normalSprite"],1,1,5,1,4,6],["cc.Camera",["_visibility","_projection","_priority","_orthoHeight","_far","_clearFlags","node","_color"],-3,1,5],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.Canvas",["node","__prefab","_cameraComponent"],3,1,4,1],["26b1c6B8shFgpoXdvSSqZlM",["node","btnNext","handNode"],3,1,1,1],["cc.SkeletalAnimation",["_useBakedAnimation","node"],2,1],["cc773HYijRBJL+ICWg2ANbo",["_enabled","node","model"],2,1,1],["4a8ab2Xwx9IEa2eOiIY9V2e",["node","toggle","label"],3,1,1,1],["de8a4GDwLNJoKBOJsvKNvGY",["node","slider","label"],3,1,1,1],["cc.Scene",["_name","_children","_globals"],2,2,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog"],3,4,4,4,4],["cc.AmbientInfo",["_skyIllum","_skyColor","_groundAlbedo"],2,5,5],["cc.ShadowsInfo",["_shadowColor"],3,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["e0ee7NrMxlFZohhbQnyEijz",["node","rotateNode"],3,1,1],["cb240Ay2FRAq5Sce0AwCQBP",["m_comment","node","RootBones"],2,1,2],["cc.MeshRenderer",["_name","node","_materials","lightmapSettings","_mesh"],2,1,3,4,6],["cc.ModelLightmapSettings",[],3],["cc.DirectionalLight",["_colorTemperature","_illuminance","node","_staticSettings"],1,1,4],["cc.StaticLightSettings",[],3],["cc.SkinnedMeshRenderer",["node","_materials","lightmapSettings","_skinningRoot","_mesh","_skeleton"],3,1,3,4,1,6,6],["cc.Slider",["_direction","node","__prefab","slideEvents","_handle"],2,1,4,9,1],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.Toggle",["node","__prefab","_normalColor","_target","checkEvents","_checkMark"],3,1,4,5,1,9,1],["cc.Skeleton",["_name","_hash","_joints","_bindposes"],0,12]],[[0,0,4,7,6,2],[0,0,4,6,2],[6,0,3,2,1,2],[16,0,2],[8,1,0,2,3],[6,0,2,1,2],[7,0,2,1,1],[3,0,3,4,2],[12,0,1,2,3],[7,0,1,1],[32,1],[0,0,4,7,2],[0,0,4,5,2],[3,0,2,3,4,2],[0,0,2,4,5,6,3],[4,0,4,6,2],[30,0,1,2,2],[35,0,1,2,3,4,5,1],[39,0,1,2,3,4],[0,0,7,6,2],[0,0,2,4,5,3],[0,0,1,4,5,6,8,9,3],[3,0,1,2,5,4,3],[3,0,1,2,5,3],[9,0,2,1,3,4,5,6,4],[2,0,2,1,8,4],[5,2,0,1,6,4],[31,0,1,2,3,4,2],[37,0,1,2,3],[8,0,2],[13,0,1,2,3,5],[14,0,1,2,4],[15,0,2],[0,0,2,1,7,5,6,4],[0,0,1,7,5,3],[0,0,3,2,4,5,6,4],[0,0,3,1,4,5,6,4],[0,0,1,4,5,6,10,3],[3,0,2,3,2],[9,0,1,3,4,5,6,3],[6,0,3,4,1,2],[7,0,1],[17,0,1,2,1],[2,0,8,9,2],[2,0,3,1,8,4],[2,0,2,1,5,8,5],[2,0,2,8,3],[2,0,4,6,8,4],[2,0,3,1,7,4,8,6],[2,0,2,3,1,4,8,6],[18,0,1,2,1],[19,0,1,2],[20,0,1,2,2],[4,4,6,5,1],[4,1,0,4,6,5,3],[4,2,1,0,4,5,4],[4,0,3,4,5,3],[21,0,1,2,1],[22,0,1,2,1],[23,0,1,2,2],[24,0,1,2,3,1],[25,0,1,2,2],[26,0,1],[27,1],[28,1],[29,0,1,1],[10,2,5,3,4,6,1],[10,0,1,2,3,4,3],[5,2,0,1,3,6,5],[5,2,0,1,4,5,6,8,6],[5,0,1,6,7,3],[5,2,0,1,6,7,4],[33,0,1,2,3,3],[34,1],[11,0,6,2],[11,1,2,3,4,5,0,6,7,7],[36,0,1,2,3,4,2],[38,0,1,2,3,4,5,1]],[[[{"name":"default_toggle_normal","rect":{"x":0,"y":0,"width":28,"height":28},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[1],0,[0],[4],[12]],[[[8,".bin",3873752485,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":14560,"length":768,"count":384,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":14560,"count":260,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-1,-0.5],"maxPosition",8,[1,0.5,1,0.5]]],-1],0,0,[],[],[]],[[[8,".bin",4094896171,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1344,"length":72,"count":36,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,-0.5],"maxPosition",8,[1,0.5,0.5,0.5]]],-1],0,0,[],[],[]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[7,0]],[[{"name":"default_toggle_checkmark","rect":{"x":4,"y":5,"width":20,"height":18},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[1],0,[0],[4],[13]],[[[31,"builtin-standard",[{"hash":3247695832,"name":"builtin-standard|standard-vs|standard-fs","glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 6) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 7) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 8) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 7) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 5) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  layout(location = 8) in vec4 a_matWorld0;\n  layout(location = 9) in vec4 a_matWorld1;\n  layout(location = 10) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 11) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 12) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nlayout(location = 0) out float v_fog_factor;\nlayout(location = 1) out highp vec4 v_shadowPos;\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  layout(location = 13) in vec4 a_color;\n  layout(location = 2) out vec4 v_color;\n#endif\nlayout(location = 3) out vec3 v_position;\nlayout(location = 4) out vec3 v_normal;\nlayout(location = 5) out vec2 v_uv;\nlayout(location = 6) out vec2 v_uv1;\n#if USE_NORMAL_MAP\n  layout(location = 7) out vec3 v_tangent;\n  layout(location = 8) out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  layout(location = 14) in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  layout(location = 9) out vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n    #if CC_USE_FOG == 0\n      v_fog_factor = LinearFog(pos);\n    #elif CC_USE_FOG == 1\n      v_fog_factor = ExpFog(pos);\n    #elif CC_USE_FOG == 2\n      v_fog_factor = ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n      v_fog_factor = LayeredFog(pos);\n    #else\n      v_fog_factor = 1.0;\n    #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(location = 0) in float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform sampler2D cc_spotLightingMap;\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n  {\n    vec4 newShadowPos = shadowPos;\n    if(cc_shadowLPNNInfo.z > 0.0001)\n    {\n      vec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\n      if(viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    vec3 viewSpacePos;\n    viewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\n    viewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\n    viewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\n    vec4 clipSpacePos;\n    clipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\n    clipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      clipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\n      clipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n    }\n    return clipSpacePos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    float coeffA = cc_shadowProjDepthInfo.x;\n    float coeffB = cc_shadowProjDepthInfo.y;\n    float viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n    viewSpacePos_z += viewspaceDepthBias;\n    vec4 result = shadowPos;\n    result.z = viewSpacePos_z * coeffA + coeffB;\n    return result;\n  }\n  float CCGetShadowFactorHard (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(clipPos.z, closestDepth);\n    return shadow;\n  }\n  float CCGetShadowFactorSoft (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetShadowFactorSoft2X (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = clipPos.z;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(depth, closestDepth);\n    return shadow;\n  }\n  float CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n#endif\n#if CC_USE_IBL\n  layout(set = 0, binding = 4) uniform samplerCube cc_environment;\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  float NV = max(abs(dot(N, V)), 0.0);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.0);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  vec3 dirlightContrib = (diffuseContrib + specularContrib);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW\n    if (NL > 0.0) {\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\n        float pcf = cc_shadowWHPBInfo.z;\n        if (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\n        else if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\n        else shadow = CCGetShadowFactorHard(pos);\n        shadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n    }\n  #endif\n  dirlightContrib *= shadow;\n  finalColor *= dirlightContrib;\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n    vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb);\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nlayout(location = 1) in highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  layout(location = 9) in vec3 v_luv;\n  layout(set = 2, binding = 9) uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nlayout(location = 3) in vec3 v_position;\nlayout(location = 5) in vec2 v_uv;\nlayout(location = 6) in vec2 v_uv1;\nlayout(location = 4) in vec3 v_normal;\n#if USE_VERTEX_COLOR\n  layout(location = 2) in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  layout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  layout(location = 7) in vec3 v_tangent;\n  layout(location = 8) in vec3 v_bitangent;\n  layout(set = 1, binding = 2) uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  layout(set = 1, binding = 3) uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  layout(set = 1, binding = 4) uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  layout(set = 1, binding = 5) uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  layout(set = 1, binding = 6) uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * miscParams.x) * normalize(v_tangent) +\n      (nmmp.y * miscParams.x) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n    pbr.w *= res.w;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  layout(set = 2, binding = 1) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.0);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  layout(location = 0) out vec4 fragColor0;\n  layout(location = 1) out vec4 fragColor1;\n  layout(location = 2) out vec4 fragColor2;\n  layout(location = 3) out vec4 fragColor3;\n  void main () {\n    StandardSurface s; surf(s);\n    fragColor0 = s.albedo;\n    fragColor1 = vec4(s.position, s.roughness);\n    fragColor2 = vec4(s.normal, s.metallic);\n    fragColor3 = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"glsl3":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nout float v_fog_factor;\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  in vec4 a_color;\n  out vec4 v_color;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec2 v_uv;\nout vec2 v_uv1;\n#if USE_NORMAL_MAP\n  out vec3 v_tangent;\n  out vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  out vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n    #if CC_USE_FOG == 0\n      v_fog_factor = LinearFog(pos);\n    #elif CC_USE_FOG == 1\n      v_fog_factor = ExpFog(pos);\n    #elif CC_USE_FOG == 2\n      v_fog_factor = ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n      v_fog_factor = LayeredFog(pos);\n    #else\n      v_fog_factor = 1.0;\n    #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nin float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n  {\n    vec4 newShadowPos = shadowPos;\n    if(cc_shadowLPNNInfo.z > 0.0001)\n    {\n      vec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\n      if(viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    vec3 viewSpacePos;\n    viewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\n    viewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\n    viewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\n    vec4 clipSpacePos;\n    clipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\n    clipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      clipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\n      clipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n    }\n    return clipSpacePos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    float coeffA = cc_shadowProjDepthInfo.x;\n    float coeffB = cc_shadowProjDepthInfo.y;\n    float viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n    viewSpacePos_z += viewspaceDepthBias;\n    vec4 result = shadowPos;\n    result.z = viewSpacePos_z * coeffA + coeffB;\n    return result;\n  }\n  float CCGetShadowFactorHard (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(clipPos.z, closestDepth);\n    return shadow;\n  }\n  float CCGetShadowFactorSoft (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetShadowFactorSoft2X (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(offsetDepth, dot(texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(offsetDepth, texture(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = clipPos.z;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(depth, closestDepth);\n    return shadow;\n  }\n  float CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(depth, dot(texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(depth, texture(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(depth, texture(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      return textureLod(tex, coord, lod);\n  }\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  float NV = max(abs(dot(N, V)), 0.0);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.0);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  vec3 dirlightContrib = (diffuseContrib + specularContrib);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW\n    if (NL > 0.0) {\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\n        float pcf = cc_shadowWHPBInfo.z;\n        if (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\n        else if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\n        else shadow = CCGetShadowFactorHard(pos);\n        shadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n    }\n  #endif\n  dirlightContrib *= shadow;\n  finalColor *= dirlightContrib;\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n    vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb);\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nin highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  in vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nin vec3 v_position;\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec3 v_normal;\n#if USE_VERTEX_COLOR\n  in vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  in vec3 v_tangent;\n  in vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * miscParams.x) * normalize(v_tangent) +\n      (nmmp.y * miscParams.x) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n    pbr.w *= res.w;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  layout(std140) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.0);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\n  layout(location = 0) out vec4 fragColorX;\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    fragColorX = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  layout(location = 0) out vec4 fragColor0;\n  layout(location = 1) out vec4 fragColor1;\n  layout(location = 2) out vec4 fragColor2;\n  layout(location = 3) out vec4 fragColor3;\n  void main () {\n    StandardSurface s; surf(s);\n    fragColor0 = s.albedo;\n    fragColor1 = vec4(s.position, s.roughness);\n    fragColor2 = vec4(s.normal, s.metallic);\n    fragColor3 = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"glsl1":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  uniform highp vec4 cc_lightingMapUVParam;\n#endif\n      uniform vec4 tilingOffset;\nfloat LinearFog(vec4 pos) {\n  vec4 wPos = pos;\n  float cam_dis = distance(cc_cameraPos, wPos);\n  float fogStart = cc_fogBase.x;\n  float fogEnd = cc_fogBase.y;\n  return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n}\nfloat ExpFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * fogDensity);\n  return f;\n}\nfloat ExpSquaredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float fogDensity = cc_fogBase.z;\n  float cam_dis = distance(cc_cameraPos, wPos) / fogAtten * 4.;\n  float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n  return f;\n}\nfloat LayeredFog(vec4 pos) {\n  vec4 wPos = pos;\n  float fogAtten = cc_fogAdd.z;\n  float _FogTop = cc_fogAdd.x;\n  float _FogRange = cc_fogAdd.y;\n  vec3 camWorldProj = cc_cameraPos.xyz;\n  camWorldProj.y = 0.;\n  vec3 worldPosProj = wPos.xyz;\n  worldPosProj.y = 0.;\n  float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n  float fDeltaY, fDensityIntegral;\n  if (cc_cameraPos.y > _FogTop) {\n    if (wPos.y < _FogTop) {\n      fDeltaY = (_FogTop - wPos.y) / _FogRange * 2.0;\n      fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n    } else {\n      fDeltaY = 0.;\n      fDensityIntegral = 0.;\n    }\n  } else {\n    if (wPos.y < _FogTop) {\n      float fDeltaA = (_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      float fDeltaB = (_FogTop - wPos.y) / _FogRange * 2.;\n      fDeltaY = abs(fDeltaA - fDeltaB);\n      fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n    } else {\n      fDeltaY = abs(_FogTop - cc_cameraPos.y) / _FogRange * 2.;\n      fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n    }\n  }\n  float fDensity;\n  if (fDeltaY != 0.) {\n    fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n  } else {\n    fDensity = 0.;\n  }\n  float f = exp(-fDensity);\n  return f;\n}\nvarying float v_fog_factor;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n#endif\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.zw;\n    v_luv.z = cc_lightingMapUVParam.z;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.zw;\n    v_luv.z = a_lightingMapUVParam.z;\n  #endif\n  }\n#endif\nvoid main () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n    #if CC_USE_FOG == 0\n      v_fog_factor = LinearFog(pos);\n    #elif CC_USE_FOG == 1\n      v_fog_factor = ExpFog(pos);\n    #elif CC_USE_FOG == 2\n      v_fog_factor = ExpSquaredFog(pos);\n    #elif CC_USE_FOG == 3\n      v_fog_factor = LayeredFog(pos);\n    #else\n      v_fog_factor = 1.0;\n    #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  gl_Position = cc_matProj * (cc_matView * matWorld) * In.position;\n}","frag":"\n#ifdef GL_EXT_draw_buffers\n#extension GL_EXT_draw_buffers: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_exposure;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n  uniform mediump vec4 cc_fogColor;\n     uniform vec4 albedo;\n     uniform vec4 albedoScaleAndCutoff;\n     uniform vec4 pbrParams;\n     uniform vec4 miscParams;\n     uniform vec4 emissive;\n     uniform vec4 emissiveScaleParam;\nvarying float v_fog_factor;\nvec3 SRGBToLinear (vec3 gamma) {\n  return gamma * gamma;\n}\nuniform highp mat4 cc_matLightView;\n  uniform highp vec4 cc_shadowInvProjDepthInfo;\n  uniform highp vec4 cc_shadowProjDepthInfo;\n  uniform highp vec4 cc_shadowProjInfo;\n  uniform lowp vec4 cc_shadowNFLSInfo;\n  uniform lowp vec4 cc_shadowWHPBInfo;\n  uniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal)\n  {\n    vec4 newShadowPos = shadowPos;\n    if(cc_shadowLPNNInfo.z > 0.0001)\n    {\n      vec4 viewNormal = cc_matLightView * vec4(worldNormal, 0.0);\n      if(viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * cc_shadowProjInfo.xy * cc_shadowLPNNInfo.z * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Perspective(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    vec3 viewSpacePos;\n    viewSpacePos.xy = shadowPos.xy * cc_shadowProjInfo.zw;\n    viewSpacePos.z = shadowPos.z * cc_shadowInvProjDepthInfo.x + shadowPos.w * cc_shadowInvProjDepthInfo.y;\n    viewSpacePos.xyz += cc_shadowProjDepthInfo.z * normalize(viewSpacePos.xyz) * viewspaceDepthBias;\n    vec4 clipSpacePos;\n    clipSpacePos.xy = viewSpacePos.xy * cc_shadowProjInfo.xy;\n    clipSpacePos.zw = viewSpacePos.z * cc_shadowProjDepthInfo.xz + vec2(cc_shadowProjDepthInfo.y, 0.0);\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      clipSpacePos.z = CCGetLinearDepthFromViewSpace(viewSpacePos.xyz);\n      clipSpacePos.z = (clipSpacePos.z * 2.0 - 1.0) * clipSpacePos.w;\n    }\n    return clipSpacePos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias)\n  {\n    float coeffA = cc_shadowProjDepthInfo.x;\n    float coeffB = cc_shadowProjDepthInfo.y;\n    float viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n    viewSpacePos_z += viewspaceDepthBias;\n    vec4 result = shadowPos;\n    result.z = viewSpacePos_z * coeffA + coeffB;\n    return result;\n  }\n  float CCGetShadowFactorHard (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture2D(cc_shadowMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture2D(cc_shadowMap, clipPos.xy).x;\n    }\n    shadow = step(clipPos.z, closestDepth);\n    return shadow;\n  }\n  float CCGetShadowFactorSoft (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * mapSize.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetShadowFactorSoft2X (vec4 shadowPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Orthographic(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float offsetDepth = clipPos.z;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(offsetDepth, dot(texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(offsetDepth, texture2D(cc_shadowMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float CCGetSpotLightShadowFactorHard (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float shadow = 0.0;\n    float closestDepth = 0.0;\n    float depth = clipPos.z;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      closestDepth = dot(texture2D(cc_spotLightingMap, clipPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\n    } else {\n      closestDepth = texture2D(cc_spotLightingMap, clipPos.xy).x;\n    }\n    shadow = step(depth, closestDepth);\n    return shadow;\n  }\n  float CCGetSpotLightShadowFactorSoft (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 oneTap = 1.0 / cc_shadowWHPBInfo.xy;\n    vec2 clipPos_offset = clipPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos.y)).x);\n      block2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset.y)).x);\n      block3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset.x, clipPos_offset.y)).x);\n    }\n    float coefX   = mod(clipPos.x, oneTap.x) * cc_shadowWHPBInfo.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(clipPos.y, oneTap.y) * cc_shadowWHPBInfo.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float CCGetSpotLightShadowFactorSoft2X (vec4 shadowPos, vec3 worldPos) {\n    vec4 clipPosNew = ApplyShadowDepthBias_Perspective(shadowPos, cc_shadowWHPBInfo.w);\n    vec3 clipPos = clipPosNew.xyz / clipPosNew.w * 0.5 + 0.5;\n    if (clipPos.x < 0.0 || clipPos.x > 1.0 ||\n        clipPos.y < 0.0 || clipPos.y > 1.0 ||\n        clipPos.z < 0.0 || clipPos.z > 1.0) { return 1.0; }\n    clipPos.xy = cc_cameraPos.w == 1.0 ? vec2(clipPos.xy.x, 1.0 - clipPos.xy.y) : clipPos.xy;\n    float depth = 0.0;\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      depth = CCGetLinearDepth(worldPos);\n    } else {\n      depth = clipPos.z;\n    }\n    float bias = cc_shadowWHPBInfo.w;\n    vec2 mapSize = cc_shadowWHPBInfo.xy;\n    vec2 oneTap = 1.0 / mapSize;\n    float clipPos_offset_L = clipPos.x - oneTap.x;\n    float clipPos_offset_R = clipPos.x + oneTap.x;\n    float clipPos_offset_U = clipPos.y - oneTap.y;\n    float clipPos_offset_D = clipPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    if (cc_shadowLPNNInfo.y > 0.000001) {\n      block0 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(depth, dot(texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    } else {\n      block0 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_U)).x);\n      block1 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_U)).x);\n      block2 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_U)).x);\n      block3 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos.y)).x);\n      block4 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos.y)).x);\n      block5 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos.y)).x);\n      block6 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_L, clipPos_offset_D)).x);\n      block7 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos.x, clipPos_offset_D)).x);\n      block8 = step(depth, texture2D(cc_spotLightingMap, vec2(clipPos_offset_R, clipPos_offset_D)).x);\n    }\n    float coefX = mod(clipPos.x, oneTap.x) * mapSize.x;\n    float coefY = mod(clipPos.y, oneTap.y) * mapSize.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return texture2DLodEXT(tex, coord, lod);\n      #else\n        return texture2D(tex, coord, lod);\n      #endif\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return textureCubeLodEXT(tex, coord, lod);\n      #else\n        return textureCube(tex, coord, lod);\n      #endif\n  }\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\nstruct StandardSurface {\n  vec4 albedo;\n  vec3 position;\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - s.position);\n  float NV = max(abs(dot(N, V)), 0.0);\n  specular = BRDFApprox(specular, s.roughness, NV);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  vec3 H = normalize(L + V);\n  float NH = max(dot(N, H), 0.0);\n  float NL = max(dot(N, L), 0.0);\n  vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n  vec3 diffuseContrib = diffuse;\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    if (s.lightmap_test > 0.0001) {\n      finalColor = s.lightmap.rgb;\n    }\n  #else\n    diffuseContrib /= 3.14159265359;\n  #endif\n  vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n  vec3 dirlightContrib = (diffuseContrib + specularContrib);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW\n    if (NL > 0.0) {\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N);\n        float pcf = cc_shadowWHPBInfo.z;\n        if (pcf > 1.9) shadow = CCGetShadowFactorSoft2X(pos);\n        else if (pcf > 0.9) shadow = CCGetShadowFactorSoft(pos);\n        else shadow = CCGetShadowFactorHard(pos);\n        shadow = mix(shadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n    }\n  #endif\n  dirlightContrib *= shadow;\n  finalColor *= dirlightContrib;\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb) * cc_ambientSky.w;\n  finalColor += (ambDiff.rgb * diffuse) * s.occlusion;\n  #if CC_USE_IBL\n    vec3 R = normalize(reflect(-V, N));\n    vec4 envmap = fragTextureLod(cc_environment, R, s.roughness * cc_ambientGround.w);\n    #if CC_USE_IBL == 2\n      vec3 env = unpackRGBE(envmap);\n    #else\n      vec3 env = SRGBToLinear(envmap.rgb);\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  #if CC_USE_HDR\n    s.emissive *= cc_exposure.w;\n  #endif\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if !CC_USE_HDR\n    color.rgb = sqrt(ACESToneMap(color.rgb));\n  #endif\n  return color;\n}\nvarying highp vec4 v_shadowPos;\n#if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n  vec3 UnpackLightingmap(vec4 color) {\n    vec3 c;\n    float e = 1.0 + color.a * (8.0 - 1.0);\n    c.r = color.r * e;\n    c.g = color.g * e;\n    c.b = color.b * e;\n    return c;\n  }\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = albedo;\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  s.albedo = baseColor;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.albedo.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  #if USE_LIGHTMAP && !USE_BATCHING && !CC_FORWARD_ADD\n    vec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\n    s.lightmap = UnpackLightingmap(lightColor);\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * miscParams.x) * normalize(v_tangent) +\n      (nmmp.y * miscParams.x) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  s.position = v_position;\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n    vec4 res = texture2D(pbrMap, PBR_UV);\n    pbr.x *= res.r;\n    pbr.y *= res.g;\n    pbr.z *= res.b;\n    pbr.w *= res.w;\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture2D(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = clamp(pbr.x, 0.0, 0.96);\n  s.roughness = clamp(pbr.y, 0.04, 1.0);\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n  # define LIGHTS_PER_PASS 1\n  #else\n  # define LIGHTS_PER_PASS 10\n  #endif\n  uniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightColor[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCStandardShadingAdditive (StandardSurface s, vec4 shadowPos) {\n    vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n    vec3 specular = mix(vec3(0.04), s.albedo.rgb, s.metallic);\n    vec3 diffuseContrib = diffuse / 3.14159265359;\n    vec3 N = normalize(s.normal);\n    vec3 V = normalize(cc_cameraPos.xyz - s.position);\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 finalColor = vec3(0.0);\n    int numLights = CC_PIPELINE_TYPE == 0 ? LIGHTS_PER_PASS : int(cc_lightDir[0].w);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      if (i >= numLights) break;\n      vec3 SLU = cc_lightPos[i].xyz - s.position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = max(dot(N, SL), 0.0);\n      float SNH = max(dot(N, SH), 0.0);\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = 3.14159265359 * (litRadiusSqr / max(litRadiusSqr , distSqr));\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 lspec = specular * CalcSpecular(s.roughness, SNH, SH, N);\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      vec3 lightColor = cc_lightColor[i].rgb;\n      float shadow = 1.0;\n      #if CC_RECEIVE_SHADOW\n        if (cc_lightPos[i].w > 0.0) {\n          {\n            float pcf = cc_shadowWHPBInfo.z;\n            if (pcf > 1.9) shadow = CCGetSpotLightShadowFactorSoft2X(shadowPos, s.position);\n            else if (pcf > 0.9) shadow = CCGetSpotLightShadowFactorSoft(shadowPos, s.position);\n            else shadow = CCGetSpotLightShadowFactorHard(shadowPos, s.position);\n          }\n        }\n      #endif\n      lightColor *= shadow;\n      finalColor += SNL * lightColor * cc_lightColor[i].w * illum * att * (diffuseContrib + lspec);\n    }\n    return vec4(finalColor, 0.0);\n  }\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingAdditive(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    gl_FragData[0] = CCFragOutput(color);\n  }\n#elif (CC_PIPELINE_TYPE == 0 || CC_FORCE_FORWARD_SHADING)\n  void main () {\n    StandardSurface s; surf(s);\n    vec4 color = CCStandardShadingBase(s, v_shadowPos);\n    color = vec4(mix(CC_FORWARD_ADD > 0 ? vec3(0.0) : cc_fogColor.rgb, color.rgb, v_fog_factor), color.a);\n    gl_FragData[0] = CCFragOutput(color);\n  }\n#elif CC_PIPELINE_TYPE == 1\n  void main () {\n    StandardSurface s; surf(s);\n    gl_FragData[0] = s.albedo;\n    gl_FragData[1] = vec4(s.position, s.roughness);\n    gl_FragData[2] = vec4(s.normal, s.metallic);\n    gl_FragData[3] = vec4(s.emissive, s.occlusion);\n  }\n#endif"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotLightingMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_environment","defines":["CC_USE_IBL"]}]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]},{"name":"CCForwardLight","defines":["CC_FORWARD_ADD"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_lightingMap","defines":["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":220,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":63}},"defines":[{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":[]},{"name":"CC_USE_FOG","type":"number","defines":[],"range":[0,4]},{"name":"CC_FORWARD_ADD","type":"boolean","defines":[]},{"name":"CC_RECEIVE_SHADOW","type":"boolean","defines":[]},{"name":"USE_VERTEX_COLOR","type":"boolean","defines":[]},{"name":"USE_NORMAL_MAP","type":"boolean","defines":[]},{"name":"HAS_SECOND_UV","type":"boolean","defines":[]},{"name":"SAMPLE_FROM_RT","type":"boolean","defines":[]},{"name":"CC_USE_IBL","type":"number","defines":[],"range":[0,2]},{"name":"CC_USE_HDR","type":"boolean","defines":[]},{"name":"USE_ALBEDO_MAP","type":"boolean","defines":[]},{"name":"ALBEDO_UV","type":"string","defines":["USE_ALBEDO_MAP"],"options":["v_uv","v_uv1"]},{"name":"NORMAL_UV","type":"string","defines":["USE_NORMAL_MAP"],"options":["v_uv","v_uv1"]},{"name":"PBR_UV","type":"string","defines":[],"options":["v_uv","v_uv1"]},{"name":"USE_PBR_MAP","type":"boolean","defines":[]},{"name":"USE_METALLIC_ROUGHNESS_MAP","type":"boolean","defines":[]},{"name":"USE_OCCLUSION_MAP","type":"boolean","defines":[]},{"name":"USE_EMISSIVE_MAP","type":"boolean","defines":[]},{"name":"EMISSIVE_UV","type":"string","defines":["USE_EMISSIVE_MAP"],"options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ALPHA_TEST_CHANNEL","type":"string","defines":["USE_ALPHA_TEST"],"options":["a","r"]},{"name":"CC_PIPELINE_TYPE","type":"number","defines":["CC_FORWARD_ADD"],"range":[0,1]},{"name":"CC_FORCE_FORWARD_SHADING","type":"boolean","defines":["CC_FORWARD_ADD"]}],"blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"miscParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"pbrMap","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_PBR_MAP"]},{"name":"metallicRoughnessMap","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_METALLIC_ROUGHNESS_MAP"]},{"name":"occlusionMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_OCCLUSION_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"attributes":[{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_normal","type":15,"count":1,"stageFlags":1,"format":32,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]},{"name":"a_tangent","type":16,"count":1,"stageFlags":1,"format":44,"location":3,"defines":[]},{"name":"a_vertexId","type":13,"count":1,"stageFlags":1,"format":11,"location":6,"defines":["CC_USE_MORPH"]},{"name":"a_joints","type":"u32vec4","count":1,"stageFlags":1,"location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","type":16,"count":1,"stageFlags":1,"format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":7,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]},{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_color","type":16,"count":1,"stageFlags":1,"format":44,"location":13,"defines":["USE_VERTEX_COLOR"]},{"name":"a_texCoord1","type":14,"count":1,"stageFlags":1,"format":21,"location":14,"defines":[]}],"varyings":[{"name":"v_fog_factor","type":13,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_shadowPos","type":16,"count":1,"stageFlags":1,"location":1,"defines":[]},{"name":"v_color","type":16,"count":1,"stageFlags":1,"location":2,"defines":["USE_VERTEX_COLOR"]},{"name":"v_position","type":15,"count":1,"stageFlags":1,"location":3,"defines":[]},{"name":"v_normal","type":15,"count":1,"stageFlags":1,"location":4,"defines":[]},{"name":"v_uv","type":14,"count":1,"stageFlags":1,"location":5,"defines":[]},{"name":"v_uv1","type":14,"count":1,"stageFlags":1,"location":6,"defines":[]},{"name":"v_tangent","type":15,"count":1,"stageFlags":1,"location":7,"defines":["USE_NORMAL_MAP"]},{"name":"v_bitangent","type":15,"count":1,"stageFlags":1,"location":8,"defines":["USE_NORMAL_MAP"]},{"name":"v_luv","type":15,"count":1,"stageFlags":1,"location":9,"defines":["USE_LIGHTMAP","!USE_BATCHING","!CC_FORWARD_ADD"]}]},{"hash":1783225275,"name":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","glsl4":{"vert":"#extension GL_EXT_shader_explicit_arithmetic_types_int32: require\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec3 a_normal;\nlayout(location = 2) in vec2 a_texCoord;\nlayout(location = 3) in vec4 a_tangent;\n#if CC_USE_MORPH\n    int getVertexId() {\n      return gl_VertexIndex;\n    }\n  layout(set = 2, binding = 4) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    layout(set = 2, binding = 6) uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    layout(set = 2, binding = 7) uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    layout(set = 2, binding = 8) uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    layout(location = 4) in u32vec4 a_joints;\n  layout(location = 5) in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      layout(location = 7) in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(set = 2, binding = 3) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(set = 2, binding = 2) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    layout(set = 2, binding = 5) uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(set = 2, binding = 3) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  layout(location = 8) in vec4 a_matWorld0;\n  layout(location = 9) in vec4 a_matWorld1;\n  layout(location = 10) in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    layout(location = 11) in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  layout(location = 12) in float a_dyn_batch_id;\n  layout(set = 2, binding = 0) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  layout(location = 13) in vec2 a_texCoord1;\n#endif\nlayout(location = 0) out vec2 v_uv;\nlayout(location = 1) out vec2 v_uv1;\nlayout(location = 2) out vec4 v_worldPos;\nlayout(location = 3) out float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(set = 0, binding = 2) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  layout(set = 0, binding = 3) uniform sampler2D cc_shadowMap;\n  layout(set = 0, binding = 5) uniform sampler2D cc_spotLightingMap;\n#endif\nlayout(location = 0) in vec2 v_uv;\nlayout(location = 1) in vec2 v_uv1;\nlayout(location = 2) in vec4 v_worldPos;\nlayout(location = 3) in float v_clip_depth;\n#if USE_ALBEDO_MAP\n  layout(set = 1, binding = 1) uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      in highp vec4 a_jointAnimInfo;\n    #endif\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    layout(std140) uniform CCSkinning {\n      highp vec4 cc_joints[30 * 3];\n    };\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n  layout(std140) uniform CCLocalBatched {\n    highp mat4 cc_matWorlds[10];\n  };\n#else\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  in vec2 a_texCoord1;\n#endif\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_worldPos;\nout float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 albedo;\n  vec4 albedoScaleAndCutoff;\n  vec4 pbrParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleParam;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightPlaneProj;\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  lowp  vec4 cc_shadowNFLSInfo;\n  lowp  vec4 cc_shadowWHPBInfo;\n  lowp  vec4 cc_shadowLPNNInfo;\n  lowp  vec4 cc_shadowColor;\n};\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n#endif\nin vec2 v_uv;\nin vec2 v_uv1;\nin vec4 v_worldPos;\nin float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n    vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n    vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n    vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n  #endif\n  void applyMorph (inout StandardVertInput attr) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    attr.position.xyz = attr.position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    attr.normal.xyz = attr.normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    attr.tangent.xyz = attr.tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n  #if CC_USE_BAKED_ANIMATION\n    #if USE_INSTANCING\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n      #else\n    uniform highp vec4 cc_joints[90];\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 3.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 3.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n              #if USE_INSTANCING\n                highp float j = 12.0 * (a_jointAnimInfo.x * a_jointAnimInfo.y + i) + a_jointAnimInfo.z;\n              #else\n                highp float j = 12.0 * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + i) + cc_jointTextureInfo.z;\n              #endif\n              highp float invSize = cc_jointTextureInfo.w;\n              highp float y = floor(j * invSize);\n              highp float x = floor(j - y * cc_jointTextureInfo.x);\n              y = (y + 0.5) * invSize;\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    mat4 getJointMatrix (float i) {\n      int idx = int(i);\n      vec4 v1 = cc_joints[idx * 3];\n      vec4 v2 = cc_joints[idx * 3 + 1];\n      vec4 v3 = cc_joints[idx * 3 + 2];\n      return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n    }\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout StandardVertInput attr) {\n    mat4 m = skinMatrix();\n    attr.position = m * attr.position;\n    attr.normal = (m * vec4(attr.normal, 0.0)).xyz;\n    attr.tangent.xyz = (m * vec4(attr.tangent.xyz, 0.0)).xyz;\n  }\n#endif\n#if USE_INSTANCING\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n  uniform highp mat4 cc_matWorlds[10];\n#else\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\n      uniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\n#if HAS_SECOND_UV || USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n      In.position = vec4(a_position, 1.0);\n      In.normal = a_normal;\n      In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In);\n    #endif\n  mat4 matWorld, matWorldIT;\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #elif USE_BATCHING\n      matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n  #endif\n  v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n   uniform vec4 albedo;\n   uniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nuniform highp mat4 cc_matLightView;\n  uniform lowp vec4 cc_shadowNFLSInfo;\n  uniform lowp vec4 cc_shadowLPNNInfo;\nfloat CCGetLinearDepthFromViewSpace(vec3 viewPos) {\n  float dist = length(viewPos);\n  return (dist - cc_shadowNFLSInfo.x) / (cc_shadowNFLSInfo.y - cc_shadowNFLSInfo.x);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n  vec4 viewStartPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  return CCGetLinearDepthFromViewSpace(viewStartPos.xyz);\n}\n#if CC_RECEIVE_SHADOW\n  uniform sampler2D cc_shadowMap;\n  uniform sampler2D cc_spotLightingMap;\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture2D(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCShadow","defines":[]},{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotLightingMap","defines":["CC_RECEIVE_SHADOW"]}]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]}]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":183,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":63}},"defines":[{"name":"CC_USE_MORPH","type":"boolean","defines":[]},{"name":"CC_MORPH_TARGET_COUNT","type":"number","defines":["CC_USE_MORPH"],"range":[2,8]},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean","defines":["CC_USE_MORPH"]},{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"USE_INSTANCING","type":"boolean","defines":[],"editor":{"elevated":true}},{"name":"USE_BATCHING","type":"boolean","defines":["!USE_INSTANCING"],"editor":{"elevated":true}},{"name":"USE_LIGHTMAP","type":"boolean","defines":["USE_INSTANCING"]},{"name":"HAS_SECOND_UV","type":"boolean","defines":[]},{"name":"CC_RECEIVE_SHADOW","type":"boolean","defines":[]},{"name":"USE_ALBEDO_MAP","type":"boolean","defines":[]},{"name":"ALBEDO_UV","type":"string","defines":["USE_ALBEDO_MAP"],"options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"ALPHA_TEST_CHANNEL","type":"string","defines":["USE_ALPHA_TEST"],"options":["a","r"]}],"blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"miscParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]}],"attributes":[{"name":"a_position","type":15,"count":1,"stageFlags":1,"format":32,"location":0,"defines":[]},{"name":"a_normal","type":15,"count":1,"stageFlags":1,"format":32,"location":1,"defines":[]},{"name":"a_texCoord","type":14,"count":1,"stageFlags":1,"format":21,"location":2,"defines":[]},{"name":"a_tangent","type":16,"count":1,"stageFlags":1,"format":44,"location":3,"defines":[]},{"name":"a_vertexId","type":13,"count":1,"stageFlags":1,"format":11,"location":6,"defines":["CC_USE_MORPH"]},{"name":"a_joints","type":"u32vec4","count":1,"stageFlags":1,"location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","type":16,"count":1,"stageFlags":1,"format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":7,"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION","USE_INSTANCING"]},{"name":"a_matWorld0","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","type":16,"count":1,"stageFlags":1,"format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","USE_LIGHTMAP"]},{"name":"a_dyn_batch_id","type":13,"count":1,"stageFlags":1,"format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_texCoord1","type":14,"count":1,"stageFlags":1,"format":21,"location":13,"defines":[]}],"varyings":[{"name":"v_uv","type":14,"count":1,"stageFlags":1,"location":0,"defines":[]},{"name":"v_uv1","type":14,"count":1,"stageFlags":1,"location":1,"defines":[]},{"name":"v_worldPos","type":16,"count":1,"stageFlags":1,"location":2,"defines":[]},{"name":"v_clip_depth","type":13,"count":1,"stageFlags":1,"location":3,"defines":[]}]}],[{"name":"opaque","passes":[{"program":"builtin-standard|standard-vs|standard-fs","properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["miscParams",0,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"miscParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0,0,0]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}},"migrations":{"properties":{"pbrParams":{"removeImmediately":true}}}},{"phase":"deferred","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","blendState":{"targets":[{"blend":false},{"blend":false},{"blend":false},{"blend":false}]},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["miscParams",0,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"miscParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0,0,0]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"forward-add","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["miscParams",0,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"miscParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0,0,0]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"shadow-caster","propertyIndex":0,"program":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST"},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP"},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}}]},{"name":"transparent","passes":[{"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORCE_FORWARD_SHADING":true},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["miscParams",0,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"miscParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0,0,0]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"forward-add","propertyIndex":0,"program":"builtin-standard|standard-vs|standard-fs","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"editor":{"slide":true,"step":0.001,"range":[0,1]},"handleInfo":["pbrParams",3,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP","slide":true,"step":0.001,"range":[0,1]},"handleInfo":["miscParams",0,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,0.5]},"miscParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0,0,0]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}},{"phase":"shadow-caster","propertyIndex":0,"program":"builtin-standard|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"editor":{"displayName":"Albedo","type":"color"},"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"editor":{"parent":"USE_ALPHA_TEST"},"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"normalStrenth":{"type":13,"value":[1],"editor":{"parent":"USE_NORMAL_MAP"},"handleInfo":["pbrParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"mainTexture":{"value":"grey","type":28,"editor":{"displayName":"AlbedoMap"},"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0.5]},"pbrParams":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,0.8,0.6,1]},"emissiveScaleParam":{"type":16,"editor":{"visible":false,"deprecated":true},"value":[1,1,1,0]},"albedoMap":{"type":28,"value":"grey","editor":{"visible":false,"deprecated":true}}}}]}]]],0,0,[],[],[]],[[{"name":"slide","rect":{"x":219,"y":115,"width":661,"height":823},"offset":{"x":37.5,"y":-14},"originalSize":{"width":1024,"height":1025},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[1],0,[0],[4],[14]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[{"name":"default_btn_normal","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"packable":true}],[1],0,[0],[4],[15]],[[{"name":"default_scrollbar_bg","rect":{"x":0,"y":0,"width":30,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":30,"height":15},"rotated":false,"capInsets":[10,4,10,4],"packable":true}],[1],0,[0],[4],[16]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[3,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[3,0]],[[[32,"Main"],[33,"Canvas",33554432,"87zqf48MdM86UPTyWKE2XK",[-8,-9,-10,-11,-12,-13,-14,-15,-16],[[6,-1,[3,"0dngp/9gNO34wUQjZfN/CX"],[5,640,1136]],[42,-3,[3,"3f2oTdCepERZdpmIfLsrhd"],-2],[43,45,-4,[3,"e8a+bU/8dPDbbJguUzLdoF"]],[50,-7,-6,-5]],[1,320,568,0]],[19,"6.!joint_Waist",[-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28],[1,0,0.22887298464775085,-0.019334007054567337]],[34,"BBL","62NPVdnHtE+qGDuppV6Q0L",[-32,-33,-34],[[51,false,-29],[52,false,-31,-30]]],[7,"10.joint_Head",[[[1,"18.joint_Tongue1",-35,[1,8.668838091807629e-8,-0.0002700805780477822,0.08569315075874329]],[1,"19.joint_Tongue2",-36,[1,1.0475218203964687e-7,0.005614318884909153,0.08571208268404007]],[1,"20.!joint_Eyes",-37,[1,-9.340284350400907e-7,0.36614394187927246,-0.010965951718389988]],[1,"21.joint_RightEye",-38,[1,-0.0353475846350193,0.05236770585179329,0.05383000522851944]],[1,"22.joint_LeftEye",-39,[1,0.03534575551748276,0.05236266925930977,0.053827062249183655]],-40,-41,-42,-43],4,4,4,4,4,1,1,1,1],[1,2.002940959755506e-7,0.06773002445697784,0.010579150170087814]],[39,"Toggle",33554432,1,[-51,-52],[[[6,-44,[3,"a7yxb8GDhNnIT24rnD3lO4"],[5,28,28]],[53,-45,[3,"3a4GKzsKZCNLuWHErVRJ1B"],45],-46,[44,33,109.61600000000001,34.186000000000035,-47],[57,-50,-49,-48]],4,4,1,4,4],[1,196.384,519.814,0]],[7,"8.joint_Torso2",[[-53,[1,"12.!joint_hidarikataP",-54,[1,0.016376739367842674,0.14067459106445312,-0.05278606340289116]],-55,[1,"15.!joint_migikataP",-56,[1,-0.016376018524169922,0.14067459106445312,-0.05278607830405235]],-57,-58,-59,-60],1,4,1,4,1,1,1,1],[1,2.054301830867189e-7,0.1162734255194664,-0.0017321491613984108]],[24,"Slider",false,33554432,1,[-68,-69],[[[6,-61,[3,"07sDRP1gxKtb3urHSdnuDY"],[5,20,300]],[54,1,0,-62,[3,"36Am8fYc5AZodP1DolQQ0j"],44],-63,[45,9,22.35899999999998,140.019,-287.641,-64],[58,-67,-66,-65]],4,4,1,4,4],[1,-287.641,277.981,0]],[59,"Main",[-70,-71,-72,3,1,-73],[60,[61,80000,[4,32304383],[4,4289506559]],[62,[4,4283190348]],[63],[64]]],[7,"33.joint_LeftWrist",[[-74,-75,-76,-77,-78,[1,"34.joint_LeftThumb0",-79,[1,0.015177383087575436,-0.02225349470973015,0.02147533930838108]]],1,1,1,1,1,4],[1,0.14502333104610443,-0.09900917112827301,0.008023344911634922]],[7,"59.joint_RightWrist",[[-80,-81,-82,-83,-84,[1,"259.joint_RightThumb0",-85,[1,-0.015177040360867977,-0.022255325689911842,0.021475423127412796]]],1,1,1,1,1,4],[1,-0.14502401649951935,-0.09900841116905212,0.008023320697247982]],[24,"btnTutorial",false,33554432,1,[-90],[[[9,-86,[5,200,100]],[55,false,1,0,-87,46],-88,[46,36,50,-89]],4,4,1,4],[1,220,-518,0]],[19,"11.joint_HipMaster",[-91,-92,-93,-94,-95],[1,0.0009369727922603488,0.9452734589576721,0.051281318068504333]],[7,"23.joint_LeftArm",[[[1,"24.joint_LeftArmTwist",-96,[1,0.10214276611804962,-0.06972572207450867,-0.0016689128242433071]],-97,[1,"25.joint_LeftArmTwist1",-98,[1,0.05287482216954231,-0.036093901842832565,-0.0008639228180982172]],[1,"26.joint_LeftArmTwist2",-99,[1,0.08745615929365158,-0.059700317680835724,-0.0014289485989138484]],[1,"27.joint_LeftArmTwist3",-100,[1,0.12203753739595413,-0.08330658078193665,-0.0019939737394452095]]],4,1,4,4,4],[1,0.08130573481321335,-0.030193328857421875,-0.004122527316212654]],[13,"28.joint_LeftElbow",13,[[[1,"29.joint_LeftHandTwist",-101,[1,0.08701395243406296,-0.05940559506416321,0.004814006853848696]],9,[1,"30.joint_LeftHandTwist1",-102,[1,0.04640743136405945,-0.03168296813964844,0.00256746937520802]],[1,"31.joint_LeftHandTwist2",-103,[1,0.0754120796918869,-0.051484834402799606,0.004172138404101133]],[1,"32.joint_LeftHandTwist3",-104,[1,0.10441671311855316,-0.07128654420375824,0.00577680766582489]]],4,1,4,4,4],[1,0.1702379584312439,-0.11620956659317017,-0.004324741195887327]],[7,"49.joint_RightArm",[[[1,"50.joint_RightArmTwist",-105,[1,-0.10214314609766006,-0.06972557306289673,-0.0016694572987034917]],-106,[1,"51.joint_RightArmTwist1",-107,[1,-0.052875813096761703,-0.036094360053539276,-0.000864217581693083]],[1,"52.joint_RightArmTwist2",-108,[1,-0.08745705336332321,-0.05970039218664169,-0.0014294240390881896]],[1,"53.joint_RightArmTwist3",-109,[1,-0.12203823775053024,-0.08330658078193665,-0.001994629157707095]]],4,1,4,4,4],[1,-0.08130615949630737,-0.030192488804459572,-0.004121617879718542]],[13,"54.joint_RightElbow",15,[[[1,"55.joint_RightHandTwist",-110,[1,-0.0870143324136734,-0.05940498411655426,0.004813991952687502]],10,[1,"56.joint_RightHandTwist1",-111,[1,-0.04640769958496094,-0.031682662665843964,0.002567464020103216]],[1,"57.joint_RightHandTwist2",-112,[1,-0.07541242241859436,-0.05148429796099663,0.004172127693891525]],[1,"58.joint_RightHandTwist3",-113,[1,-0.10441721230745316,-0.07128600776195526,0.005776791367679834]]],4,1,4,4,4],[1,-0.17023853957653046,-0.11620933562517166,-0.0043256934732198715]],[0,"76.!joint_otsu_ichousei",6,[-114,-115,-116,-117],[1,-3.2159005058929324e-7,0.03164482116699219,-0.0067350673489272594]],[20,"Sprite",33554432,1,[[6,-118,[3,"f7NISe7HdAD68SLfhnddy8"],[5,640,1136]],[15,0,-119,[3,"e71ctEmpxFC4KlSYRZNz/a"]],[47,45,40,36,-120],[65,-121,3]]],[22,"Handle",33554432,7,[[[6,-122,[3,"13QJLCXqxP1Il0fUQIF50F"],[5,32,32]],-123,[66,-125,[3,"9eUkB/MkNDvohDk817OV44"],[4,4292269782],-124,43]],4,1,4],[1,0,-120,0]],[14,"Sprite-001",33554432,1,[[41,-126],[56,0,false,-127,47],[48,4,20,138.55399999999997,30,164.1,-128]],[1,-100,-488,0]],[11,"U_Char",3,[-129,-130,-131]],[38,"282.!Root",3,[[12,[1,"0.!joint_Actuator",-132,[1,0,0.024347474798560143,0]],-133],1,4,1]],[0,"1.!joint_Master",22,[-134,-135,-136],[1,0,0.024347474798560143,0]],[12,"SwingBone",3,[[16,"Hair",-141,[-137,-138,-139,-140]],[16,"Skirt",-154,[-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153]],[16,"hada",-157,[-155,-156]]]],[14,"Label",33554432,1,[[9,-158,[5,141.55,50.4]],[68,"SwingBone",26,26,true,-159],[25,9,10,23,-160]],[1,-239.225,519.8,0]],[14,"Label-001",33554432,1,[[9,-161,[5,167.5,50.4]],[26,"Made by Yansixing",20,20,-162],[25,9,10,61,-163]],[1,-226.25,481.8,0]],[35,"Label-002",false,33554432,1,[[9,-164,[5,164.1,50.4]],[26,"Slide to Rotate.",24,24,-165],[49,9,10,20,186.034,164.1,-166]],[1,-227.95,356.766,0]],[0,"219.joint_hidari?_0_1",4,[-167],[1,0.15397301316261292,0.13722656667232513,-0.057543035596609116]],[0,"226.joint_migi?_0_1",4,[-168],[1,-0.15397487580776215,0.13722656667232513,-0.057543035596609116]],[0,"240.joint_hidari??_0_1",4,[-169],[1,0.07858992367982864,0.06329452246427536,0.04124082997441292]],[0,"253.joint_migi??_0_1",4,[-170],[1,-0.07859179377555847,0.06329452246427536,0.04124082997441292]],[13,"13.joint_LeftShoulder",6,[[[1,"14.!joint_LeftShoulderC",-171,[1,0.08130573481321335,-0.030193328857421875,-0.004122527316212654]],13],4,1],[1,0.016376739367842674,0.14067459106445312,-0.05278606340289116]],[13,"16.joint_RightShoulder",6,[[[1,"17.!joint_RightShoulderC",-172,[1,-0.08130615949630737,-0.030192488804459572,-0.004121617879718542]],15],4,1],[1,-0.016376018524169922,0.14067459106445312,-0.05278607830405235]],[0,"233.joint_hidari?_0_1",6,[-173],[1,0.011670907959342003,0.07558265328407288,-0.11150486022233963]],[0,"246.joint_migi?_0_1",6,[-174],[1,-0.011671551503241062,0.07558265328407288,-0.11150486022233963]],[5,"195.joint_Skirt_9_0",[[1,"207.!joint_Skirt_10_0",-175,[1,-0.0015554045094177127,-0.01736099272966385,0.03373527526855469]]],[1,0.0001736833219183609,-0.04172687605023384,0.009653110057115555]],[5,"196.joint_Skirt_9_1",[[1,"208.!joint_Skirt_10_1",-176,[1,0.013499603606760502,-0.018582457676529884,0.022290954366326332]]],[1,0.0076375482603907585,-0.041369933634996414,0.00897962599992752]],[5,"197.joint_Skirt_9_2",[[1,"209.!joint_Skirt_10_2",-177,[1,0.015982838347554207,-0.022762756794691086,0.0011083793360739946]]],[1,0.013150691986083984,-0.04095496982336044,0.005896186921745539]],[5,"198.joint_Skirt_9_3",[[1,"210.!joint_Skirt_10_3",-178,[1,0.02628953941166401,-0.019357794895768166,-0.006783857475966215]]],[1,0.014303913339972496,-0.04128006100654602,0.0010452556889504194]],[5,"199.joint_Skirt_9_4",[[1,"211.!joint_Skirt_10_4",-179,[1,0.02542436681687832,-0.016847457736730576,-0.017977571114897728]]],[1,0.012240409851074219,-0.04183380305767059,-0.006007285322993994]],[5,"200.joint_Skirt_9_5",[[1,"212.!joint_Skirt_10_5",-180,[1,0.016560563817620277,-0.016320953145623207,-0.03223329409956932]]],[1,0.006933135911822319,-0.04255149886012077,-0.010697088204324245]],[5,"201.joint_Skirt_9_6",[[1,"213.!joint_Skirt_10_6",-181,[1,0.0016984042013064027,-0.012651634402573109,-0.05020171031355858]]],[1,-0.00032188938348554075,-0.04292377457022667,-0.012167835608124733]],[5,"202.joint_Skirt_9_7",[[1,"214.!joint_Skirt_10_7",-182,[1,-0.012164974585175514,-0.01669536530971527,-0.034149885177612305]]],[1,-0.007514104712754488,-0.04253307357430458,-0.010373963974416256]],[5,"203.joint_Skirt_9_8",[[1,"215.!joint_Skirt_10_8",-183,[1,-0.024427585303783417,-0.016339149326086044,-0.023967770859599113]]],[1,-0.012491703033447266,-0.04185501113533974,-0.005299902055412531]],[5,"204.joint_Skirt_9_9",[[1,"216.!joint_Skirt_10_9",-184,[1,-0.02003002166748047,-0.02112892083823681,-0.007393260020762682]]],[1,-0.014619274064898491,-0.04199230298399925,0.001382689457386732]],[5,"205.joint_Skirt_9_10",[[1,"217.!joint_Skirt_10_10",-185,[1,-0.017362022772431374,-0.021955832839012146,0.00258357054553926]]],[1,-0.012623215094208717,-0.04195316135883331,0.005882082041352987]],[5,"206.joint_Skirt_9_11",[[1,"218.!joint_Skirt_10_11",-186,[1,-0.019369715824723244,-0.017802352085709572,0.022168654948472977]]],[1,-0.006796236149966717,-0.042422104626894,0.00870944932103157]],[23,"Label",33554432,7,[[[6,-187,[3,"c68UOAlNhN171Umca6yVvF"],[5,42.26,50.4]],-188],4,1]],[23,"Checkmark",33554432,5,[[[6,-189,[3,"e4k6OSwohL75lyfsntvPC5"],[5,26,26]],-190],4,1]],[22,"Label",33554432,5,[[[6,-191,[3,"c68UOAlNhN171Umca6yVvF"],[5,73.4,50.4]],-192],4,1],[1,70.695,0,0]],[20,"Label",33554432,11,[[9,-193,[5,200,100]],[69,"Tutorial>>",32,32,1,false,-194,[4,4278229247]]]],[36,"Cube",false,"5fhwI9bfVEBqEkmjfABtTg",8,[[27,"Cube<ModelComponent>",-195,[0],[10],1]],[1,0,1.215,0]],[21,"Main Light-001","bdndJYgAdPcJbTu6c3R8tQ",8,[[72,9532,110000,-196,[73]]],[1,-0.649,3.024,2.258],[3,-0.333998715784301,-0.2816627595413572,-0.10530939057392595,0.8933201441806479],[1,-41,-35,0]],[21,"Main Camera-001","00UJb1ru1CwLhHksGB1lgS",8,[[74,1822425087,-197]],[1,0,1.13,2.279],[3,-0.0879381252724669,0,0,0.9961259388870285],[1,-10.09,0,0]],[12,"U_Char_0",21,[[17,-198,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],[10],3,24,25]]],[12,"U_Char_1",21,[[17,-199,[26,27,28,29,30,31,32,33,34,35,36,37],[10],3,38,39]]],[12,"U_Char_2",21,[[17,-200,[40],[10],3,41,42]]],[0,"60.!joint_koshikyanseruhidari",12,[-201],[1,0.06703510135412216,-0.11001075804233551,-0.025670848786830902]],[0,"278.joint_LeftHipD",58,[-202],[1,0.005964393727481365,0.038563765585422516,0.011799812316894531]],[0,"279.joint_LeftKneeD",59,[-203],[1,-0.011176176369190216,-0.3832428753376007,0.020241394639015198]],[2,"280.joint_LeftFootD",60,[[1,"281.joint_hidariashisakiEX",-204,[1,0.00003800868944381364,-0.05950794368982315,0.063979372382164]]],[1,-0.0007788181537762284,-0.36939170956611633,-0.05937245860695839]],[0,"61.!joint_LeftHip",12,[-205],[1,0.0729994922876358,-0.071446992456913,-0.013871035538613796]],[0,"62.!joint_LeftKnee",62,[-206],[1,-0.011176176369190216,-0.3832428753376007,0.020241394639015198]],[2,"63.!joint_LeftFoot",63,[[1,"64.!joint_LeftToe",-207,[1,0.009247755631804466,-0.08844999223947525,0.09509319067001343]]],[1,-0.0007788181537762284,-0.36939170956611633,-0.05937245860695839]],[0,"65.!joint_koshikyanserumigi",12,[-208],[1,-0.06890904158353806,-0.11001075804233551,-0.025670848786830902]],[0,"274.joint_RightHipD",65,[-209],[1,-0.005964393727481365,0.03856468200683594,0.011799829080700874]],[0,"275.joint_RightKneeD",66,[-210],[1,0.01117180846631527,-0.38326799869537354,0.01977361924946308]],[2,"276.joint_RightFootD",67,[[1,"277.joint_migiashisakiEX",-211,[1,-0.00003766536610783078,-0.059470176696777344,0.06415578722953796]]],[1,0.0007826709770597517,-0.36942416429519653,-0.059169311076402664]],[0,"66.!joint_RightHip",12,[-212],[1,-0.0748734325170517,-0.07144607603549957,-0.013871018774807453]],[0,"67.!joint_RightKnee",69,[-213],[1,0.01117180846631527,-0.38326799869537354,0.01977361924946308]],[2,"68.!joint_RightFoot",70,[[1,"69.!joint_RightToe",-214,[1,-0.009247059933841228,-0.0882875844836235,0.09524323791265488]]],[1,0.0007826709770597517,-0.36942416429519653,-0.059169311076402664]],[0,"7.joint_Torso",12,[6],[1,-0.0009368566679768264,0.01419425942003727,0.0024256324395537376]],[0,"9.joint_Neck",6,[4],[1,4.1214428847524687e-7,0.16440452635288239,-0.051587991416454315]],[0,"220.joint_hidari?_1_1",28,[-215],[1,9.53674295089968e-9,-0.04301239177584648,4.76837147544984e-9]],[0,"221.joint_hidari?_2_1",74,[-216],[1,0,-0.04301269352436066,-4.76837147544984e-9]],[0,"222.joint_hidari?_3_1",75,[-217],[1,0,-0.04301269352436066,-4.76837147544984e-9]],[0,"223.joint_hidari?_4_1",76,[-218],[1,9.53674295089968e-9,-0.04301246628165245,-9.53674295089968e-9]],[2,"224.joint_hidari?_5_1",77,[[1,"225.!joint_hidari?_6_1",-219,[1,-3.814697180359872e-8,-0.04301246628165245,1.907348590179936e-8]]],[1,1.907348590179936e-8,-0.04301261901855469,0]],[0,"227.joint_migi?_1_1",29,[-220],[1,-9.53674295089968e-9,-0.04301239177584648,0]],[0,"228.joint_migi?_2_1",79,[-221],[1,0,-0.04301269352436066,0]],[0,"229.joint_migi?_3_1",80,[-222],[1,0,-0.04301269352436066,0]],[0,"230.joint_migi?_4_1",81,[-223],[1,-9.53674295089968e-9,-0.04301246628165245,0]],[2,"231.joint_migi?_5_1",82,[[1,"232.!joint_migi?_6_1",-224,[1,3.814697180359872e-8,-0.04301246628165245,4.76837147544984e-9]]],[1,-1.907348590179936e-8,-0.04301261901855469,0]],[0,"241.joint_hidari??_1_1",30,[-225],[1,0,-0.01962371915578842,0]],[0,"242.joint_hidari??_2_1",84,[-226],[1,0,-0.019623413681983948,0]],[0,"243.joint_hidari??_3_1",85,[-227],[1,0,-0.019623413681983948,0]],[2,"244.joint_hidari??_4_1",86,[[1,"245.!joint_hidari??_5_1",-228,[1,0,-0.019623490050435066,0]]],[1,0,-0.019623566418886185,0]],[0,"254.joint_migi??_1_1",31,[-229],[1,0,-0.01962371915578842,0]],[0,"255.joint_migi??_2_1",88,[-230],[1,0,-0.019623413681983948,0]],[0,"256.joint_migi??_3_1",89,[-231],[1,0,-0.019623413681983948,0]],[2,"257.joint_migi??_4_1",90,[[1,"258.!joint_migi??_5_1",-232,[1,0,-0.019623490050435066,0]]],[1,0,-0.019623566418886185,0]],[0,"283.!joint_LeftThumb0M",9,[-233],[1,0.011006927117705345,-0.01941169798374176,0.019275803118944168]],[2,"39.joint_LeftThumb1",92,[[1,"40.joint_LeftThumb2",-234,[1,0.011795120313763618,-0.01327919028699398,0.008660316467285156]]],[1,0.011006927117705345,-0.01941169798374176,0.019275803118944168]],[0,"35.joint_LeftIndex1",9,[-235],[1,0.057161904871463776,-0.03838874772191048,0.017691008746623993]],[2,"41.joint_LeftIndex2",94,[[1,"42.joint_LeftIndex3",-236,[1,0.01681167632341385,-0.009494857862591743,-0.0005574250244535506]]],[1,0.020591622218489647,-0.012831267900764942,0.0004969370202161372]],[0,"36.joint_LeftMiddle1",9,[-237],[1,0.05709239840507507,-0.03728805482387543,0.0001766903733368963]],[2,"43.joint_LeftMiddle2",96,[[1,"44.joint_LeftMiddle3",-238,[1,0.019765282049775124,-0.009607162326574326,-0.00044281274313107133]]],[1,0.024622153490781784,-0.012676391750574112,-0.0006005599861964583]],[0,"37.joint_LeftRing1",9,[-239],[1,0.053837280720472336,-0.03798355162143707,-0.01598859392106533]],[2,"45.joint_LeftRing2",98,[[1,"46.joint_LeftRing3",-240,[1,0.018704261630773544,-0.009506072849035263,-0.001269174856133759]]],[1,0.02412521280348301,-0.01212997455149889,-0.0016387582290917635]],[0,"38.joint_LeftPinky1",9,[-241],[1,0.046000100672245026,-0.03733589127659798,-0.02791582979261875]],[2,"47.joint_LeftPinky2",100,[[1,"48.joint_LeftPinky3",-242,[1,0.01221946720033884,-0.0076554869301617146,-0.0014177251141518354]]],[1,0.017970390617847443,-0.010867462493479252,-0.004577055107802153]],[0,"284.!joint_RightThumb0M",10,[-243],[1,-0.011006775312125683,-0.019412612542510033,0.019275842234492302]],[2,"264.joint_RightThumb1",102,[[1,"265.joint_RightThumb2",-244,[1,-0.011795120313763618,-0.01327919028699398,0.008660316467285156]]],[1,-0.011006737127900124,-0.019412612542510033,0.01927584409713745]],[0,"260.joint_RightIndex1",10,[-245],[1,-0.05716155841946602,-0.03839058056473732,0.01769109070301056]],[2,"266.joint_RightIndex2",104,[[1,"267.joint_RightIndex3",-246,[1,-0.01681167632341385,-0.009494857862591743,-0.0005574250244535506]]],[1,-0.020591622218489647,-0.012831267900764942,0.0004969370202161372]],[0,"261.joint_RightMiddle1",10,[-247],[1,-0.057092055678367615,-0.03728988766670227,0.0001767725480021909]],[2,"268.joint_RightMiddle2",106,[[1,"269.joint_RightMiddle3",-248,[1,-0.019765282049775124,-0.009607162326574326,-0.00044281274313107133]]],[1,-0.024622153490781784,-0.012676391750574112,-0.0006005599861964583]],[0,"262.joint_RightRing1",10,[-249],[1,-0.05383693799376488,-0.03798538073897362,-0.015988511964678764]],[2,"270.joint_RightRing2",108,[[1,"271.joint_RightRing3",-250,[1,-0.018704261630773544,-0.009506072849035263,-0.001269174856133759]]],[1,-0.02412521280348301,-0.01212997455149889,-0.0016387582290917635]],[0,"263.joint_RightPinky1",10,[-251],[1,-0.04599975422024727,-0.03733772411942482,-0.027915747836232185]],[2,"272.joint_RightPinky2",110,[[1,"273.joint_RightPinky3",-252,[1,-0.01221946720033884,-0.0076554869301617146,-0.0014177251141518354]]],[1,-0.017970390617847443,-0.010867462493479252,-0.004577055107802153]],[0,"77.!joint_LeftBreastUpper",17,[-253],[1,0.04025549069046974,0.05874893069267273,-0.003932895604521036]],[2,"78.joint_LeftBreastUpper2",112,[[1,"79.!joint_LeftBreastTip",-254,[1,-0.001002888660877943,-0.06299415230751038,0.008046388626098633]]],[1,0.00834045372903347,-0.0009710693266242743,0.06648948043584824]],[2,"80.!joint_LeftBreastLower",17,[[1,"81.!joint_LeftBreastLowerTip",-255,[1,0.005870757158845663,0.007784194778650999,0.08031292259693146]]],[1,0.041895948350429535,-0.009338302537798882,-0.010129542089998722]],[0,"82.!joint_RightBreastUpper",17,[-256],[1,-0.04025549069046974,0.05874893069267273,-0.003932895604521036]],[2,"83.joint_RightBreastUpper2",115,[[1,"84.!joint_RightBreastTip",-257,[1,0.0010084914974868298,-0.06306228786706924,0.008046083152294159]]],[1,-0.008346080780029297,-0.0009029388311319053,0.06648978590965271]],[2,"85.!joint_RightBreastLower",17,[[1,"86.!joint_RightBreastLowerTip",-258,[1,-0.00587077159434557,0.007784347515553236,0.08031292259693146]]],[1,-0.041895948350429535,-0.009338455274701118,-0.010129546746611595]],[0,"234.joint_hidari?_1_1",34,[-259],[1,0.016767745837569237,-0.05484481900930405,-0.01501728966832161]],[0,"235.joint_hidari?_2_1",118,[-260],[1,0.016767747700214386,-0.054844893515110016,-0.015017304569482803]],[0,"236.joint_hidari?_3_1",119,[-261],[1,0.01676773466169834,-0.05484481900930405,-0.01501729991286993]],[0,"237.joint_hidari?_4_1",120,[-262],[1,0.016767745837569237,-0.05484481900930405,-0.01501729991286993]],[2,"238.joint_hidari?_5_1",121,[[1,"239.!joint_hidari?_6_1",-263,[1,0.016767749562859535,-0.054844893515110016,-0.01501729991286993]]],[1,0.016767745837569237,-0.05484474077820778,-0.01501728966832161]],[0,"247.joint_migi?_1_1",35,[-264],[1,-0.016767745837569237,-0.05484481900930405,-0.01501728966832161]],[0,"248.joint_migi?_2_1",123,[-265],[1,-0.016767747700214386,-0.054844893515110016,-0.015017304569482803]],[0,"249.joint_migi?_3_1",124,[-266],[1,-0.01676773466169834,-0.05484481900930405,-0.01501729991286993]],[0,"250.joint_migi?_4_1",125,[-267],[1,-0.016767745837569237,-0.05484481900930405,-0.01501729991286993]],[2,"251.joint_migi?_5_1",126,[[1,"252.!joint_migi?_6_1",-268,[1,-0.016767749562859535,-0.054844893515110016,-0.01501729991286993]]],[1,-0.016767745837569237,-0.05484474077820778,-0.01501728966832161]],[0,"2.!joint_Center",23,[-269],[1,0,0.6240352392196655,0]],[11,"3.!joint_Center2",128,[-270]],[11,"4.!joint_guru^bu",129,[-271]],[11,"5.!joint_guru^bu2",130,[2]],[0,"87.joint_Skirt_0_0",2,[-272],[1,0.000201475850190036,0.094986192882061,0.16852515935897827]],[0,"99.joint_Skirt_1_0",132,[-273],[1,0.0003877491981256753,-0.04824981838464737,0.009470472112298012]],[0,"111.joint_Skirt_2_0",133,[-274],[1,0.00022990141587797552,-0.04235084354877472,0.006384458392858505]],[0,"123.joint_Skirt_3_0",134,[-275],[1,0.00014665588969364762,-0.04779151827096939,0.006947631947696209]],[0,"135.joint_Skirt_4_0",135,[-276],[1,-0.000039730221033096313,-0.044385604560375214,0.006767616141587496]],[0,"147.!joint_Skirt_5_0",136,[-277],[1,0.000059530066209845245,-0.042233046144247055,0.007108879275619984]],[0,"159.joint_Skirt_6_0",137,[-278],[1,0.00009189776756102219,-0.04542068392038345,0.008030776865780354]],[0,"171.joint_Skirt_7_0",138,[-279],[1,0.00015692510351072997,-0.0419449619948864,0.008659439161419868]],[0,"183.joint_Skirt_8_0",139,[36],[1,0.00014732018462382257,-0.04355495423078537,0.009091358631849289]],[0,"88.joint_Skirt_0_1",2,[-280],[1,0.05321946740150452,0.09554862976074219,0.15473884344100952]],[0,"100.joint_Skirt_1_1",141,[-281],[1,0.00792273972183466,-0.04784752056002617,0.008461857214570045]],[0,"112.joint_Skirt_2_1",142,[-282],[1,0.006402640137821436,-0.042089082300662994,0.006119966506958008]],[0,"124.joint_Skirt_3_1",143,[-283],[1,0.006909208372235298,-0.04748275876045227,0.00654229149222374]],[0,"136.joint_Skirt_4_1",144,[-284],[1,0.006764836143702269,-0.043901748955249786,0.007535562384873629]],[0,"148.!joint_Skirt_5_1",145,[-285],[1,0.006605444010347128,-0.04190727323293686,0.007096481509506702]],[0,"160.joint_Skirt_6_1",146,[-286],[1,0.007064466364681721,-0.045039139688014984,0.007977276109158993]],[0,"172.joint_Skirt_7_1",147,[-287],[1,0.007224464323371649,-0.04163558781147003,0.008042278699576855]],[0,"184.joint_Skirt_8_1",148,[37],[1,0.00743554113432765,-0.043246954679489136,0.0083472253754735]],[0,"89.joint_Skirt_0_2",2,[-288],[1,0.09593209624290466,0.09863227605819702,0.11901817470788956]],[0,"101.joint_Skirt_1_2",150,[-289],[1,0.01979132741689682,-0.044468458741903305,0.009217395447194576]],[0,"113.joint_Skirt_2_2",151,[-290],[1,0.013515949249267578,-0.040910493582487106,0.005897417198866606]],[0,"125.joint_Skirt_3_2",152,[-291],[1,0.01106234546750784,-0.04708793759346008,0.004437656607478857]],[0,"137.joint_Skirt_4_2",153,[-292],[1,0.011179971508681774,-0.043753355741500854,0.004471721593290567]],[0,"149.joint_Skirt_5_2",154,[-293],[1,0.010585994459688663,-0.04190269485116005,0.004078473895788193]],[0,"161.joint_Skirt_6_2",155,[-294],[1,0.01112163532525301,-0.04499008134007454,0.004515771754086018]],[0,"173.joint_Skirt_7_2",156,[-295],[1,0.01177898421883583,-0.0414886474609375,0.00497854221612215]],[0,"185.joint_Skirt_8_2",157,[38],[1,0.01225290261209011,-0.0429706946015358,0.00536036491394043]],[0,"90.joint_Skirt_0_3",2,[-296],[1,0.1114485040307045,0.09709228575229645,0.06347434222698212]],[0,"102.joint_Skirt_1_3",159,[-297],[1,0.019463233649730682,-0.039324186742305756,0.000020322799173300155]],[0,"114.joint_Skirt_2_3",160,[-298],[1,0.018250245600938797,-0.04299613833427429,0.0001928377168951556]],[0,"126.joint_Skirt_3_3",161,[-299],[1,0.012675991281867027,-0.04727180302143097,0.000622277264483273]],[0,"138.!joint_Skirt_4_3",162,[-300],[1,0.011302662082016468,-0.04427520930767059,0.0006452322122640908]],[0,"150.joint_Skirt_5_3",163,[-301],[1,0.01064722053706646,-0.04403106868267059,0.0008675908902660012]],[0,"162.joint_Skirt_6_3",164,[-302],[1,0.011145382188260555,-0.04223937913775444,0.0011641406454145908]],[0,"174.joint_Skirt_7_3",165,[-303],[1,0.01216592825949192,-0.04356040805578232,0.001212220173329115]],[0,"186.joint_Skirt_8_3",166,[39],[1,0.013679294846951962,-0.04316818341612816,0.0011411762097850442]],[0,"91.joint_Skirt_0_4",2,[-304],[1,0.09435383975505829,0.09668449312448502,0.022872567176818848]],[0,"103.joint_Skirt_1_4",168,[-305],[1,0.012299938127398491,-0.04173889011144638,-0.006375222001224756]],[0,"115.joint_Skirt_2_4",169,[-306],[1,0.01291530579328537,-0.04471321031451225,-0.006608318071812391]],[0,"127.joint_Skirt_3_4",170,[-307],[1,0.01277613639831543,-0.04707832261919975,-0.006998807657510042]],[0,"139.joint_Skirt_4_4",171,[-308],[1,0.011591052636504173,-0.04405319318175316,-0.006419422570616007]],[0,"151.joint_Skirt_5_4",172,[-309],[1,0.0108371926471591,-0.04395820572972298,-0.005540556740015745]],[0,"163.joint_Skirt_6_4",173,[-310],[1,0.010707054287195206,-0.042331695556640625,-0.005380036775022745]],[0,"175.joint_Skirt_7_4",174,[-311],[1,0.011249409057199955,-0.04382576048374176,-0.005675149150192738]],[0,"187.joint_Skirt_8_4",175,[40],[1,0.011960010975599289,-0.04362495243549347,-0.005994882434606552]],[0,"92.joint_Skirt_0_5",2,[-312],[1,0.05480232089757919,0.09735473990440369,-0.00791840348392725]],[0,"104.joint_Skirt_1_5",177,[-313],[1,0.007520060520619154,-0.041945189237594604,-0.012576453387737274]],[0,"116.joint_Skirt_2_5",178,[-314],[1,0.008341293781995773,-0.04452262818813324,-0.014491629786789417]],[0,"128.joint_Skirt_3_5",179,[-315],[1,0.006569766905158758,-0.0483454130589962,-0.00980418175458908]],[0,"140.joint_Skirt_4_5",180,[-316],[1,0.0059263561852276325,-0.045233000069856644,-0.008681855164468288]],[0,"152.!joint_Skirt_5_5",181,[-317],[1,0.005912027321755886,-0.044735029339790344,-0.009211797267198563]],[0,"164.joint_Skirt_6_5",182,[-318],[1,0.005669040605425835,-0.0432099923491478,-0.008584870956838131]],[0,"176.joint_Skirt_7_5",183,[-319],[1,0.005935640539973974,-0.04472343623638153,-0.009095096960663795]],[0,"188.joint_Skirt_8_5",184,[41],[1,0.006515760440379381,-0.04447010159492493,-0.010038862004876137]],[0,"93.joint_Skirt_0_6",2,[-320],[1,-0.00003861331060761586,0.09701240807771683,-0.017952460795640945]],[0,"105.joint_Skirt_1_6",186,[-321],[1,-0.000035092514735879377,-0.04323013126850128,-0.011037941090762615]],[0,"117.joint_Skirt_2_6",187,[-322],[1,-0.00006261048838496208,-0.04637596011161804,-0.011170688085258007]],[0,"129.joint_Skirt_3_6",188,[-323],[1,0.00008794150926405564,-0.04882049560546875,-0.010897975414991379]],[0,"141.joint_Skirt_4_6",189,[-324],[1,-0.0001535948395030573,-0.04563651978969574,-0.009690022096037865]],[0,"153.!joint_Skirt_5_6",190,[-325],[1,-0.0004497462068684399,-0.045245133340358734,-0.009602461010217667]],[0,"165.joint_Skirt_6_6",191,[-326],[1,-0.0002837749489117414,-0.043612442910671234,-0.00942916888743639]],[0,"177.joint_Skirt_7_6",192,[-327],[1,-0.00020821363432332873,-0.04510024935007095,-0.01011114101856947]],[0,"189.joint_Skirt_8_6",193,[42],[1,-0.00023282520123757422,-0.044775620102882385,-0.01153393741697073]],[0,"94.joint_Skirt_0_7",2,[-328],[1,-0.054611820727586746,0.09715324640274048,-0.007310633547604084]],[0,"106.joint_Skirt_1_7",195,[-329],[1,-0.007767128758132458,-0.04186050593852997,-0.01271803118288517]],[0,"118.joint_Skirt_2_7",196,[-330],[1,-0.008753437548875809,-0.04433952271938324,-0.014696772210299969]],[0,"130.joint_Skirt_3_7",197,[-331],[1,-0.0068369959481060505,-0.04822227358818054,-0.010165214538574219]],[0,"142.joint_Skirt_4_7",198,[-332],[1,-0.0063454769551754,-0.04523208737373352,-0.00838752742856741]],[0,"154.!joint_Skirt_5_7",199,[-333],[1,-0.006293840240687132,-0.04490669071674347,-0.007982716895639896]],[0,"166.joint_Skirt_6_7",200,[-334],[1,-0.006370448973029852,-0.04317115619778633,-0.008282308466732502]],[0,"178.joint_Skirt_7_7",201,[-335],[1,-0.006750717293471098,-0.04456626996397972,-0.009165287017822266]],[0,"190.joint_Skirt_8_7",202,[43],[1,-0.007276983465999365,-0.044328805059194565,-0.010101213119924068]],[0,"95.joint_Skirt_0_8",2,[-336],[1,-0.09445957839488983,0.09676238894462585,0.022532593458890915]],[0,"107.joint_Skirt_1_8",204,[-337],[1,-0.01244337111711502,-0.04169105365872383,-0.0064118956215679646]],[0,"119.joint_Skirt_2_8",205,[-338],[1,-0.013128604739904404,-0.04464759677648544,-0.006690659560263157]],[0,"131.joint_Skirt_3_8",206,[-339],[1,-0.01276334747672081,-0.04722793400287628,-0.006145631894469261]],[0,"143.joint_Skirt_4_8",207,[-340],[1,-0.01172669418156147,-0.04414665326476097,-0.005617834161967039]],[0,"155.joint_Skirt_5_8",208,[-341],[1,-0.01038472168147564,-0.044206392019987106,-0.004396447911858559]],[0,"167.joint_Skirt_6_8",209,[-342],[1,-0.010785665363073349,-0.04242340102791786,-0.0044089509174227715]],[0,"179.joint_Skirt_7_8",210,[-343],[1,-0.011558265425264835,-0.043856505304574966,-0.004685606807470322]],[0,"191.joint_Skirt_8_8",211,[44],[1,-0.012185153551399708,-0.043689653277397156,-0.005012507550418377]],[0,"96.!joint_Skirt_0_9",2,[-344],[1,-0.11121190339326859,0.09699767827987671,0.0635470300912857]],[0,"108.joint_Skirt_1_9",213,[-345],[1,-0.019703654572367668,-0.03921462967991829,-0.00008675098069943488]],[0,"120.joint_Skirt_2_9",214,[-346],[1,-0.018916988745331764,-0.045656584203243256,-0.0001460790663259104]],[0,"132.joint_Skirt_3_9",215,[-347],[1,-0.011236581951379776,-0.04219108447432518,0.0007020282791927457]],[0,"144.!joint_Skirt_4_9",216,[-348],[1,-0.0134041216224432,-0.04635727033019066,0.00045079708797857165]],[0,"156.joint_Skirt_5_9",217,[-349],[1,-0.012806053273379803,-0.043441466987133026,0.0010353183606639504]],[0,"168.joint_Skirt_6_9",218,[-350],[1,-0.012333640828728676,-0.041903305798769,0.0013221979606896639]],[0,"180.joint_Skirt_7_9",219,[-351],[1,-0.013047351501882076,-0.04417182877659798,0.00138092041015625]],[0,"192.!joint_Skirt_8_9",220,[45],[1,-0.014062290079891682,-0.04135223478078842,0.0014066791627556086]],[0,"97.joint_Skirt_0_10",2,[-352],[1,-0.09643775969743729,0.09556625038385391,0.11900346726179123]],[0,"109.joint_Skirt_1_10",222,[-353],[1,-0.01685037650167942,-0.03943687304854393,0.007593450602144003]],[0,"121.joint_Skirt_2_10",223,[-354],[1,-0.016805734485387802,-0.045581817626953125,0.006750354543328285]],[0,"133.joint_Skirt_3_10",224,[-355],[1,-0.01064363494515419,-0.04190628230571747,0.003650236176326871]],[0,"145.joint_Skirt_4_10",225,[-356],[1,-0.01162450760602951,-0.04634925723075867,0.004644346423447132]],[0,"157.joint_Skirt_5_10",226,[-357],[1,-0.010397062636911869,-0.043587494641542435,0.004391717724502087]],[0,"169.joint_Skirt_6_10",227,[-358],[1,-0.010479144752025604,-0.0419088751077652,0.004306897986680269]],[0,"181.joint_Skirt_7_10",228,[-359],[1,-0.010985660366714,-0.044225387275218964,0.0046837422996759415]],[0,"193.joint_Skirt_8_10",229,[46],[1,-0.012145576067268848,-0.04131908342242241,0.005490226671099663]],[0,"98.joint_Skirt_0_11",2,[-360],[1,-0.0543171726167202,0.09299186617136002,0.1568899303674698]],[0,"110.joint_Skirt_1_11",231,[-361],[1,-0.0065474603325128555,-0.041894227266311646,0.007185039576143026]],[0,"122.joint_Skirt_2_11",232,[-362],[1,-0.007470674347132444,-0.047498397529125214,0.00821173656731844]],[0,"134.joint_Skirt_3_11",233,[-363],[1,-0.005825777072459459,-0.0421198271214962,0.006485385820269585]],[0,"146.joint_Skirt_4_11",234,[-364],[1,-0.0059533738531172276,-0.04685363918542862,0.00717272749170661]],[0,"158.!joint_Skirt_5_11",235,[-365],[1,-0.005844373721629381,-0.043819352984428406,0.006405639462172985]],[0,"170.joint_Skirt_6_11",236,[-366],[1,-0.005883112084120512,-0.04204803332686424,0.006906738504767418]],[0,"182.joint_Skirt_7_11",237,[-367],[1,-0.0060913655906915665,-0.04441024735569954,0.0076306723058223724]],[0,"194.joint_Skirt_8_11",238,[47],[1,-0.00658663734793663,-0.04167751222848892,0.008366393856704235]],[0,"74.!IK_LeftHipParent",23,[-368],[1,0.061947163194417953,-0.0887146070599556,-0.0008501767879351974]],[2,"70.!IK_LeftHip",240,[[1,"71.!IK_LeftToe",-369,[1,0.009282546117901802,-0.08713896572589874,0.09629596769809723]]],[1,0,0.18343603610992432,-0.0011975147062912583]],[0,"75.!IK_RightHipParent",23,[-370],[1,-0.061947163194417953,-0.0887146070599556,-0.0008501767879351974]],[2,"72.!IK_RightHip",242,[[1,"73.!IK_RightToe",-371,[1,-0.009280414320528507,-0.0871393084526062,0.09629490226507187]]],[1,-0.0000021314619971235516,0.1834363490343094,-0.001196433906443417]],[40,"Camera",1,[-372],[1,0,0,1000]],[75,0,1073741824,568,2000,6,41943040,244,[4,4278190080]],[15,0,19,[3,"70944AM5hNwKBMkwzEOckA"]],[70,20,20,48,[3,"2frm37uaJHQr0AEEaYyM82"]],[76,1,7,[3,"d072tlidJJc4WAM3bGih0d"],[[28,"de8a4GDwLNJoKBOJsvKNvGY","onSliderMove",7]],246],[15,0,49,[3,"25nHiyhlVLhbUiFI4JJ9Sn"]],[71,"Enabled",20,20,50,[3,"2frm37uaJHQr0AEEaYyM82"]],[77,5,[3,"58GFHdMmJFBa4quSrrbzsk"],[4,4292269782],5,[[28,"4a8ab2Xwx9IEa2eOiIY9V2e","onToggle",5]],249],[67,3,0.9,11,[4,4292269782],11],[37,"Cylinder","08LDshKthL57m/oqaG+5s2",8,[[27,"Cylinder<ModelComponent>",-373,[48],[10],49]],[1,0,-0.046,0],[1,1,0.05,1]]],0,[0,1,1,0,10,245,0,1,1,0,1,1,0,11,20,0,12,252,0,1,1,0,-1,244,0,-2,18,0,-3,7,0,-4,5,0,-5,11,0,-6,25,0,-7,26,0,-8,27,0,-9,20,0,-1,132,0,-2,141,0,-3,150,0,-4,159,0,-5,168,0,-6,177,0,-7,186,0,-8,195,0,-9,204,0,-10,213,0,-11,222,0,-12,231,0,1,3,0,13,3,0,1,3,0,-1,21,0,-2,22,0,-3,24,0,0,4,0,0,4,0,0,4,0,0,4,0,0,4,0,-6,28,0,-7,29,0,-8,30,0,-9,31,0,1,5,0,1,5,0,-3,251,0,1,5,0,9,250,0,14,251,0,1,5,0,-1,49,0,-2,50,0,-1,73,0,0,6,0,-3,32,0,0,6,0,-5,33,0,-6,17,0,-7,34,0,-8,35,0,1,7,0,1,7,0,-3,248,0,1,7,0,9,247,0,15,248,0,1,7,0,-1,19,0,-2,48,0,-1,52,0,-2,53,0,-3,54,0,-6,253,0,-1,92,0,-2,94,0,-3,96,0,-4,98,0,-5,100,0,0,9,0,-1,102,0,-2,104,0,-3,106,0,-4,108,0,-5,110,0,0,10,0,1,11,0,1,11,0,-3,252,0,1,11,0,-1,51,0,-1,58,0,-2,62,0,-3,65,0,-4,69,0,-5,72,0,0,13,0,-2,14,0,0,13,0,0,13,0,0,13,0,0,14,0,0,14,0,0,14,0,0,14,0,0,15,0,-2,16,0,0,15,0,0,15,0,0,15,0,0,16,0,0,16,0,0,16,0,0,16,0,-1,112,0,-2,114,0,-3,115,0,-4,117,0,1,18,0,1,18,0,1,18,0,1,18,0,1,19,0,-2,246,0,16,19,0,1,19,0,1,20,0,1,20,0,1,20,0,-1,55,0,-2,56,0,-3,57,0,0,22,0,-3,23,0,-1,128,0,-2,240,0,-3,242,0,-1,28,0,-2,29,0,-3,30,0,-4,31,0,1,24,0,-1,36,0,-2,37,0,-3,38,0,-4,39,0,-5,40,0,-6,41,0,-7,42,0,-8,43,0,-9,44,0,-10,45,0,-11,46,0,-12,47,0,1,24,0,-1,34,0,-2,35,0,1,24,0,1,25,0,1,25,0,1,25,0,1,26,0,1,26,0,1,26,0,1,27,0,1,27,0,1,27,0,-1,74,0,-1,79,0,-1,84,0,-1,88,0,0,32,0,0,33,0,-1,118,0,-1,123,0,0,36,0,0,37,0,0,38,0,0,39,0,0,40,0,0,41,0,0,42,0,0,43,0,0,44,0,0,45,0,0,46,0,0,47,0,1,48,0,-2,247,0,1,49,0,-2,249,0,1,50,0,-2,250,0,1,51,0,1,51,0,1,52,0,1,53,0,1,54,0,1,55,0,1,56,0,1,57,0,-1,59,0,-1,60,0,-1,61,0,0,61,0,-1,63,0,-1,64,0,0,64,0,-1,66,0,-1,67,0,-1,68,0,0,68,0,-1,70,0,-1,71,0,0,71,0,-1,75,0,-1,76,0,-1,77,0,-1,78,0,0,78,0,-1,80,0,-1,81,0,-1,82,0,-1,83,0,0,83,0,-1,85,0,-1,86,0,-1,87,0,0,87,0,-1,89,0,-1,90,0,-1,91,0,0,91,0,-1,93,0,0,93,0,-1,95,0,0,95,0,-1,97,0,0,97,0,-1,99,0,0,99,0,-1,101,0,0,101,0,-1,103,0,0,103,0,-1,105,0,0,105,0,-1,107,0,0,107,0,-1,109,0,0,109,0,-1,111,0,0,111,0,-1,113,0,0,113,0,0,114,0,-1,116,0,0,116,0,0,117,0,-1,119,0,-1,120,0,-1,121,0,-1,122,0,0,122,0,-1,124,0,-1,125,0,-1,126,0,-1,127,0,0,127,0,-1,129,0,-1,130,0,-1,131,0,-1,133,0,-1,134,0,-1,135,0,-1,136,0,-1,137,0,-1,138,0,-1,139,0,-1,140,0,-1,142,0,-1,143,0,-1,144,0,-1,145,0,-1,146,0,-1,147,0,-1,148,0,-1,149,0,-1,151,0,-1,152,0,-1,153,0,-1,154,0,-1,155,0,-1,156,0,-1,157,0,-1,158,0,-1,160,0,-1,161,0,-1,162,0,-1,163,0,-1,164,0,-1,165,0,-1,166,0,-1,167,0,-1,169,0,-1,170,0,-1,171,0,-1,172,0,-1,173,0,-1,174,0,-1,175,0,-1,176,0,-1,178,0,-1,179,0,-1,180,0,-1,181,0,-1,182,0,-1,183,0,-1,184,0,-1,185,0,-1,187,0,-1,188,0,-1,189,0,-1,190,0,-1,191,0,-1,192,0,-1,193,0,-1,194,0,-1,196,0,-1,197,0,-1,198,0,-1,199,0,-1,200,0,-1,201,0,-1,202,0,-1,203,0,-1,205,0,-1,206,0,-1,207,0,-1,208,0,-1,209,0,-1,210,0,-1,211,0,-1,212,0,-1,214,0,-1,215,0,-1,216,0,-1,217,0,-1,218,0,-1,219,0,-1,220,0,-1,221,0,-1,223,0,-1,224,0,-1,225,0,-1,226,0,-1,227,0,-1,228,0,-1,229,0,-1,230,0,-1,232,0,-1,233,0,-1,234,0,-1,235,0,-1,236,0,-1,237,0,-1,238,0,-1,239,0,-1,241,0,0,241,0,-1,243,0,0,243,0,-1,245,0,1,253,0,17,8,1,0,8,2,0,131,3,0,8,4,0,73,6,0,72,9,0,14,10,0,16,12,0,22,13,0,32,15,0,33,36,0,140,37,0,149,38,0,158,39,0,167,40,0,176,41,0,185,42,0,194,43,0,203,44,0,212,45,0,221,46,0,230,47,0,239,373],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,249,251,252,252,252,252],[-1,6,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,6,7,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,6,7,-1,6,7,8,5,5,5,5,-1,6,5,5,8,8,18,19,20],[8,17,18,19,4,4,4,20,9,9,1,1,1,1,1,1,1,1,1,1,1,1,1,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,10,41,11,5,42,8,43,10,44,11,5,5,45,46]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[{"name":"default_btn_pressed","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"packable":true}],[1],0,[0],[4],[47]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[6,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[3,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[6,0]],[[{"name":"default_btn_disabled","rect":{"x":0,"y":0,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[12,12,12,12],"packable":true}],[1],0,[0],[4],[48]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[8,".bin",2286941201,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":4224,"length":720,"count":180,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4224,"count":48,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]}],"jointMaps":[[0,29]],"morph":{"subMeshMorphs":[{"attributes":["a_position"],"targets":[{"displacements":[{"offset":4944,"length":576,"stride":4,"count":144}]}]}],"targetNames":["60.照れ"]}},"minPosition",8,[1,-0.058586813509464264,1.3548802137374878,0.023013751953840256],"maxPosition",8,[1,0.058472294360399246,1.3770713806152344,0.03456918150186539]]],-1],0,0,[],[],[]],[[[8,".bin",98581377,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":78584,"length":18720,"count":4680,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[1],"indexView":{"offset":105928,"length":1056,"count":264,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[2],"indexView":{"offset":121328,"length":1872,"count":468,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[3],"indexView":{"offset":140624,"length":2352,"count":588,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[4],"indexView":{"offset":172456,"length":3960,"count":990,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[5],"indexView":{"offset":180816,"length":768,"count":192,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[6],"indexView":{"offset":183696,"length":240,"count":60,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[7],"indexView":{"offset":188160,"length":528,"count":132,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[8],"indexView":{"offset":207432,"length":3840,"count":960,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[9],"indexView":{"offset":227112,"length":1728,"count":432,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[10],"indexView":{"offset":384248,"length":33672,"count":8418,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[11],"indexView":{"offset":422144,"length":720,"count":180,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":78584,"count":893,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":97304,"length":8624,"count":98,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":106984,"length":14344,"count":163,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":123200,"length":17424,"count":198,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":142976,"length":29480,"count":335,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":176416,"length":4400,"count":50,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":181584,"length":2112,"count":24,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":183936,"length":4224,"count":48,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":188688,"length":18744,"count":213,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":211272,"length":15840,"count":180,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":228840,"length":155408,"count":1766,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":417920,"length":4224,"count":48,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]}],"jointMaps":[[0,6,7,8,9,15,16,17,18,26,29,30,31,33,34]],"morph":{"subMeshMorphs":[{"attributes":["a_position"],"targets":[{"displacements":[{"offset":422864,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":433580,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":444296,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":455012,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":465728,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":476444,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":487160,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":497876,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":508592,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":519308,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":530024,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":540740,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":551456,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":562172,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":572888,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":583604,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":594320,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":605036,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":615752,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":626468,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":637184,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":647900,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":658616,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":669332,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":680048,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":690764,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":701480,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":712196,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":722912,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":733628,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":744344,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":755060,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":765776,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":776492,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":787208,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":797924,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":808640,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":819356,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":830072,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":840788,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":851504,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":862220,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":872936,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":883652,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":894368,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":905084,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":915800,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":926516,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":937232,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":947948,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":958664,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":969380,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":980096,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":990812,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":1001528,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":1012244,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":1022960,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":1033676,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":1044392,"length":10716,"stride":4,"count":2679}]},{"displacements":[{"offset":1055108,"length":10716,"stride":4,"count":2679}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1065824,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1067000,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1068176,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1069352,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1070528,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1071704,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1072880,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1074056,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1075232,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1076408,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1077584,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1078760,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1079936,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1081112,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1082288,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1083464,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1084640,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1085816,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1086992,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1088168,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1089344,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1090520,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1091696,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1092872,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1094048,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1095224,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1096400,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1097576,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1098752,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1099928,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1101104,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1102280,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1103456,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1104632,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1105808,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1106984,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1108160,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1109336,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1110512,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1111688,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1112864,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1114040,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1115216,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1116392,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1117568,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1118744,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1119920,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1121096,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1122272,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1123448,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1124624,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1125800,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1126976,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1128152,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1129328,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1130504,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1131680,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1132856,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1134032,"length":1176,"stride":4,"count":294}]},{"displacements":[{"offset":1135208,"length":1176,"stride":4,"count":294}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1136384,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1138340,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1140296,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1142252,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1144208,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1146164,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1148120,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1150076,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1152032,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1153988,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1155944,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1157900,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1159856,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1161812,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1163768,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1165724,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1167680,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1169636,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1171592,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1173548,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1175504,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1177460,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1179416,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1181372,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1183328,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1185284,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1187240,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1189196,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1191152,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1193108,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1195064,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1197020,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1198976,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1200932,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1202888,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1204844,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1206800,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1208756,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1210712,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1212668,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1214624,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1216580,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1218536,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1220492,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1222448,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1224404,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1226360,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1228316,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1230272,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1232228,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1234184,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1236140,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1238096,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1240052,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1242008,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1243964,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1245920,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1247876,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1249832,"length":1956,"stride":4,"count":489}]},{"displacements":[{"offset":1251788,"length":1956,"stride":4,"count":489}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1253744,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1256120,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1258496,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1260872,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1263248,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1265624,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1268000,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1270376,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1272752,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1275128,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1277504,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1279880,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1282256,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1284632,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1287008,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1289384,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1291760,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1294136,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1296512,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1298888,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1301264,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1303640,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1306016,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1308392,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1310768,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1313144,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1315520,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1317896,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1320272,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1322648,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1325024,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1327400,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1329776,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1332152,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1334528,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1336904,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1339280,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1341656,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1344032,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1346408,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1348784,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1351160,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1353536,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1355912,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1358288,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1360664,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1363040,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1365416,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1367792,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1370168,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1372544,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1374920,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1377296,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1379672,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1382048,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1384424,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1386800,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1389176,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1391552,"length":2376,"stride":4,"count":594}]},{"displacements":[{"offset":1393928,"length":2376,"stride":4,"count":594}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1396304,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1400324,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1404344,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1408364,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1412384,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1416404,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1420424,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1424444,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1428464,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1432484,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1436504,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1440524,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1444544,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1448564,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1452584,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1456604,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1460624,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1464644,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1468664,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1472684,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1476704,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1480724,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1484744,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1488764,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1492784,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1496804,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1500824,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1504844,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1508864,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1512884,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1516904,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1520924,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1524944,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1528964,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1532984,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1537004,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1541024,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1545044,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1549064,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1553084,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1557104,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1561124,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1565144,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1569164,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1573184,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1577204,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1581224,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1585244,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1589264,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1593284,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1597304,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1601324,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1605344,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1609364,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1613384,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1617404,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1621424,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1625444,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1629464,"length":4020,"stride":4,"count":1005}]},{"displacements":[{"offset":1633484,"length":4020,"stride":4,"count":1005}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1637504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1638104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1638704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1639304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1639904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1640504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1641104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1641704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1642304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1642904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1643504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1644104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1644704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1645304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1645904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1646504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1647104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1647704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1648304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1648904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1649504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1650104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1650704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1651304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1651904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1652504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1653104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1653704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1654304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1654904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1655504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1656104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1656704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1657304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1657904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1658504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1659104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1659704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1660304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1660904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1661504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1662104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1662704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1663304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1663904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1664504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1665104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1665704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1666304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1666904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1667504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1668104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1668704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1669304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1669904,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1670504,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1671104,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1671704,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1672304,"length":600,"stride":4,"count":150}]},{"displacements":[{"offset":1672904,"length":600,"stride":4,"count":150}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1673504,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1673792,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1674080,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1674368,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1674656,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1674944,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1675232,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1675520,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1675808,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1676096,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1676384,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1676672,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1676960,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1677248,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1677536,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1677824,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1678112,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1678400,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1678688,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1678976,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1679264,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1679552,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1679840,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1680128,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1680416,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1680704,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1680992,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1681280,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1681568,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1681856,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1682144,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1682432,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1682720,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1683008,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1683296,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1683584,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1683872,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1684160,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1684448,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1684736,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1685024,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1685312,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1685600,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1685888,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1686176,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1686464,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1686752,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1687040,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1687328,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1687616,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1687904,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1688192,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1688480,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1688768,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1689056,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1689344,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1689632,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1689920,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1690208,"length":288,"stride":4,"count":72}]},{"displacements":[{"offset":1690496,"length":288,"stride":4,"count":72}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1690784,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1691360,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1691936,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1692512,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1693088,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1693664,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1694240,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1694816,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1695392,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1695968,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1696544,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1697120,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1697696,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1698272,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1698848,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1699424,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1700000,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1700576,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1701152,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1701728,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1702304,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1702880,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1703456,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1704032,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1704608,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1705184,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1705760,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1706336,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1706912,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1707488,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1708064,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1708640,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1709216,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1709792,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1710368,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1710944,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1711520,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1712096,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1712672,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1713248,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1713824,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1714400,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1714976,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1715552,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1716128,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1716704,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1717280,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1717856,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1718432,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1719008,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1719584,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1720160,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1720736,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1721312,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1721888,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1722464,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1723040,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1723616,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1724192,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":1724768,"length":576,"stride":4,"count":144}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1725344,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1727900,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1730456,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1733012,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1735568,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1738124,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1740680,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1743236,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1745792,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1748348,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1750904,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1753460,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1756016,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1758572,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1761128,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1763684,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1766240,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1768796,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1771352,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1773908,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1776464,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1779020,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1781576,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1784132,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1786688,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1789244,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1791800,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1794356,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1796912,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1799468,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1802024,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1804580,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1807136,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1809692,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1812248,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1814804,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1817360,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1819916,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1822472,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1825028,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1827584,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1830140,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1832696,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1835252,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1837808,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1840364,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1842920,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1845476,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1848032,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1850588,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1853144,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1855700,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1858256,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1860812,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1863368,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1865924,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1868480,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1871036,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1873592,"length":2556,"stride":4,"count":639}]},{"displacements":[{"offset":1876148,"length":2556,"stride":4,"count":639}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":1878704,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1880864,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1883024,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1885184,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1887344,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1889504,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1891664,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1893824,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1895984,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1898144,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1900304,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1902464,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1904624,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1906784,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1908944,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1911104,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1913264,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1915424,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1917584,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1919744,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1921904,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1924064,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1926224,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1928384,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1930544,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1932704,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1934864,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1937024,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1939184,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1941344,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1943504,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1945664,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1947824,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1949984,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1952144,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1954304,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1956464,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1958624,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1960784,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1962944,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1965104,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1967264,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1969424,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1971584,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1973744,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1975904,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1978064,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1980224,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1982384,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1984544,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1986704,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1988864,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1991024,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1993184,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1995344,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1997504,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":1999664,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":2001824,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":2003984,"length":2160,"stride":4,"count":540}]},{"displacements":[{"offset":2006144,"length":2160,"stride":4,"count":540}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":2008304,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2029496,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2050688,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2071880,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2093072,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2114264,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2135456,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2156648,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2177840,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2199032,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2220224,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2241416,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2262608,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2283800,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2304992,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2326184,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2347376,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2368568,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2389760,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2410952,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2432144,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2453336,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2474528,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2495720,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2516912,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2538104,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2559296,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2580488,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2601680,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2622872,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2644064,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2665256,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2686448,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2707640,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2728832,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2750024,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2771216,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2792408,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2813600,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2834792,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2855984,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2877176,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2898368,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2919560,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2940752,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2961944,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":2983136,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3004328,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3025520,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3046712,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3067904,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3089096,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3110288,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3131480,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3152672,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3173864,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3195056,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3216248,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3237440,"length":21192,"stride":4,"count":5298}]},{"displacements":[{"offset":3258632,"length":21192,"stride":4,"count":5298}]}]},{"attributes":["a_position"],"targets":[{"displacements":[{"offset":3279824,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3280400,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3280976,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3281552,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3282128,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3282704,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3283280,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3283856,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3284432,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3285008,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3285584,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3286160,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3286736,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3287312,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3287888,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3288464,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3289040,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3289616,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3290192,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3290768,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3291344,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3291920,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3292496,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3293072,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3293648,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3294224,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3294800,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3295376,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3295952,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3296528,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3297104,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3297680,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3298256,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3298832,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3299408,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3299984,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3300560,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3301136,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3301712,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3302288,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3302864,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3303440,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3304016,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3304592,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3305168,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3305744,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3306320,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3306896,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3307472,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3308048,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3308624,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3309200,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3309776,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3310352,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3310928,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3311504,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3312080,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3312656,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3313232,"length":576,"stride":4,"count":144}]},{"displacements":[{"offset":3313808,"length":576,"stride":4,"count":144}]}]}],"targetNames":["0.あ","1.い","2.う","3.え","4.お","5.ワ","6.ん","7.い１","8.い２","9.あ２","10.にやり","11.にやり２","12.にやり３","13.ω","14.てへぺろ","15.ぺろっ","16.口角上げ","17.口横広げ","18.口横狭め","19.舌広げ","20.まばたき","21.笑い","22.ウィンク","23.ウィンク右","24.ウィンク２","25.ウィンク２右","26.目星","27.はぅ","28.なごみ","29.なごみ左","30.なごみ右","31.びっくり","32.じと目","33.喜び","34.怒り目","35.ジト目","36.眼角up","37.眼角down","38.下眼up","39.困る","40.にこり","41.怒り","42.真面目","43.上","44.下","45.前","46.困る左","47.困る右","48.にこり左","49.にこり右","50.怒り左","51.怒り右","52.真面目左","53.真面目右","54.上左","55.上右","56.下左","57.下右","58.前左","59.前右"]}},"minPosition",8,[1,-0.14266563951969147,0.002821688074618578,-0.0554635152220726],"maxPosition",8,[1,0.14266516268253326,1.4796950817108154,0.1237131655216217]]],-1],0,0,[],[],[]],[[[18,"Skin-0",3856972061,["282.!Root","282.!Root/11.joint_HipMaster","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari","282.!Root/11.joint_HipMaster/61.!joint_LeftHip","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee/63.!joint_LeftFoot","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee/63.!joint_LeftFoot/64.!joint_LeftToe","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD/280.joint_LeftFootD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD/280.joint_LeftFootD/281.joint_hidariashisakiEX","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi","282.!Root/11.joint_HipMaster/66.!joint_RightHip","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee/68.!joint_RightFoot","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee/68.!joint_RightFoot/69.!joint_RightToe","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD/276.joint_RightFootD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD/276.joint_RightFootD/277.joint_migiashisakiEX","282.!Root/0.!joint_Actuator","282.!Root/1.!joint_Master","282.!Root/1.!joint_Master/2.!joint_Center","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist","282.!Root/11.joint_HipMaster/7.joint_Torso","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/18.joint_Tongue1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/19.joint_Tongue2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/20.!joint_Eyes","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/21.joint_RightEye","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/22.joint_LeftEye","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1/224.joint_hidari?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1/224.joint_hidari?_5_1/225.!joint_hidari?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1/231.joint_migi?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1/231.joint_migi?_5_1/232.!joint_migi?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1/244.joint_hidari??_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1/244.joint_hidari??_4_1/245.!joint_hidari??_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1/257.joint_migi??_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1/257.joint_migi??_4_1/258.!joint_migi??_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/12.!joint_hidarikataP","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/14.!joint_LeftShoulderC","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/24.joint_LeftArmTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/29.joint_LeftHandTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M/39.joint_LeftThumb1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M/39.joint_LeftThumb1/40.joint_LeftThumb2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1/41.joint_LeftIndex2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1/41.joint_LeftIndex2/42.joint_LeftIndex3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1/43.joint_LeftMiddle2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1/43.joint_LeftMiddle2/44.joint_LeftMiddle3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1/45.joint_LeftRing2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1/45.joint_LeftRing2/46.joint_LeftRing3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1/47.joint_LeftPinky2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1/47.joint_LeftPinky2/48.joint_LeftPinky3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/34.joint_LeftThumb0","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/30.joint_LeftHandTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/31.joint_LeftHandTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/32.joint_LeftHandTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/25.joint_LeftArmTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/26.joint_LeftArmTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/27.joint_LeftArmTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/15.!joint_migikataP","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/17.!joint_RightShoulderC","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/50.joint_RightArmTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/55.joint_RightHandTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M/264.joint_RightThumb1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M/264.joint_RightThumb1/265.joint_RightThumb2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1/266.joint_RightIndex2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1/266.joint_RightIndex2/267.joint_RightIndex3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1/268.joint_RightMiddle2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1/268.joint_RightMiddle2/269.joint_RightMiddle3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1/270.joint_RightRing2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1/270.joint_RightRing2/271.joint_RightRing3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1/272.joint_RightPinky2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1/272.joint_RightPinky2/273.joint_RightPinky3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/259.joint_RightThumb0","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/56.joint_RightHandTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/57.joint_RightHandTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/58.joint_RightHandTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/51.joint_RightArmTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/52.joint_RightArmTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/53.joint_RightArmTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper/78.joint_LeftBreastUpper2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper/78.joint_LeftBreastUpper2/79.!joint_LeftBreastTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/80.!joint_LeftBreastLower","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/80.!joint_LeftBreastLower/81.!joint_LeftBreastLowerTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper/83.joint_RightBreastUpper2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper/83.joint_RightBreastUpper2/84.!joint_RightBreastTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/85.!joint_RightBreastLower","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/85.!joint_RightBreastLower/86.!joint_RightBreastLowerTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1/238.joint_hidari?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1/238.joint_hidari?_5_1/239.!joint_hidari?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1/251.joint_migi?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1/251.joint_migi?_5_1/252.!joint_migi?_6_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0/195.joint_Skirt_9_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0/195.joint_Skirt_9_0/207.!joint_Skirt_10_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1/196.joint_Skirt_9_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1/196.joint_Skirt_9_1/208.!joint_Skirt_10_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2/197.joint_Skirt_9_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2/197.joint_Skirt_9_2/209.!joint_Skirt_10_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3/198.joint_Skirt_9_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3/198.joint_Skirt_9_3/210.!joint_Skirt_10_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4/199.joint_Skirt_9_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4/199.joint_Skirt_9_4/211.!joint_Skirt_10_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5/200.joint_Skirt_9_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5/200.joint_Skirt_9_5/212.!joint_Skirt_10_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6/201.joint_Skirt_9_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6/201.joint_Skirt_9_6/213.!joint_Skirt_10_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7/202.joint_Skirt_9_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7/202.joint_Skirt_9_7/214.!joint_Skirt_10_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8/203.joint_Skirt_9_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8/203.joint_Skirt_9_8/215.!joint_Skirt_10_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9/204.joint_Skirt_9_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9/204.joint_Skirt_9_9/216.!joint_Skirt_10_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10/205.joint_Skirt_9_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10/205.joint_Skirt_9_10/217.!joint_Skirt_10_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11/206.joint_Skirt_9_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11/206.joint_Skirt_9_11/218.!joint_Skirt_10_11","282.!Root/1.!joint_Master/74.!IK_LeftHipParent","282.!Root/1.!joint_Master/74.!IK_LeftHipParent/70.!IK_LeftHip","282.!Root/1.!joint_Master/74.!IK_LeftHipParent/70.!IK_LeftHip/71.!IK_LeftToe","282.!Root/1.!joint_Master/75.!IK_RightHipParent","282.!Root/1.!joint_Master/75.!IK_RightHipParent/72.!IK_RightHip","282.!Root/1.!joint_Master/75.!IK_RightHipParent/72.!IK_RightHip/73.!IK_RightToe"],[[[7,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009369727922603488,-0.9452734589576721,-0.051281318068504333,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06797207146883011,-0.835262656211853,-0.02561047114431858,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07393646240234375,-0.8738264441490173,-0.03741028159856796,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06276028603315353,-0.4905835688114166,-0.05765167623758316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06198146939277649,-0.1211918443441391,0.0017207800410687923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0712292268872261,-0.03274185210466385,-0.0933724120259285,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07393646240234375,-0.8738264441490173,-0.03741028159856796,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06276028603315353,-0.4905835688114166,-0.05765167623758316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06198146939277649,-0.1211918443441391,0.0017207800410687923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.062019478529691696,-0.06168390437960625,-0.06225859001278877,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06797207146883011,-0.835262656211853,-0.02561047114431858,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07393646240234375,-0.873827338218689,-0.037410300225019455,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06276465207338333,-0.49055933952331543,-0.05718391761183739,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06198198348283768,-0.1211351752281189,0.001985392067581415,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07122904062271118,-0.03284759446978569,-0.0932578444480896,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07393646240234375,-0.873827338218689,-0.037410300225019455,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06276465207338333,-0.49055933952331543,-0.05718391761183739,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06198198348283768,-0.1211351752281189,0.001985392067581415,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.062019649893045425,-0.06166500225663185,-0.06217039003968239,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.024347474798560143,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.024347474798560143,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.8772556781768799,0.019334007054567337,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-1.1615985329171963e-7,-0.9594677090644836,-0.053706951439380646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-3.2159005058929324e-7,-1.075741171836853,-0.05197480320930481,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-7.337343390645401e-7,-1.2401456832885742,-0.00038680803845636547,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-9.340284350400907e-7,-1.307875633239746,-0.010965957306325436,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0000010207168088527396,-1.3076056241989136,-0.0966591089963913,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000001038780624185165,-1.3134900331497192,-0.09667804092168808,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-1.6740195751190186,-6.2770686426461e-9,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.03534664958715439,-1.360243320465088,-0.06479596346616745,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.03534669056534767,-1.3602383136749268,-0.06479302048683167,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397393703460693,-1.4451022148132324,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.4020898342132568,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.3590770959854126,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.316064476966858,0.046577081084251404,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397396683692932,-1.2730519771575928,0.0465770922601223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397398173809052,-1.230039358139038,0.0465770922601223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397393703460693,-1.187026858329773,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397393703460693,-1.4451022148132324,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.4020898342132568,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.3590770959854126,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.316064476966858,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397396683692932,-1.2730519771575928,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397398173809052,-1.230039358139038,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397393703460693,-1.187026858329773,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.371170163154602,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.3515465259552002,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.331923007965088,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.3122996091842651,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.2926760911941528,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.2730525732040405,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.371170163154602,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.3515465259552002,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.331923007965088,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.3122996091842651,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.2926760911941528,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.2730525732040405,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.01637706160545349,-1.2164157629013062,0.0008112633368000388,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.01637706160545349,-1.2164157629013062,0.0008112633368000388,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09768278896808624,-1.1862224340438843,0.004933790769428015,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09768278896808624,-1.1862224340438843,0.004933790769428015,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.19982555508613586,-1.1164966821670532,0.0066027031280100346,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.26792073249816895,-1.0700128078460693,0.009258531965315342,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3549346923828125,-1.0106072425842285,0.004444525111466646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.41294407844543457,-0.9710036516189575,0.0012351871700957417,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.42395099997520447,-0.951591968536377,-0.018040616065263748,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.43495792150497437,-0.9321802258491516,-0.037316419184207916,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.44675305485725403,-0.9189010858535767,-0.04597673565149307,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47010597586631775,-0.9326149225234985,-0.016455821692943573,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49069759249687195,-0.9197836518287659,-0.01695275865495205,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5075092911720276,-0.9102887511253357,-0.016395334154367447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47003647685050964,-0.9337155818939209,0.0010584968840703368,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49465861916542053,-0.9210392236709595,0.0016590568702667952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5144239068031311,-0.9114320278167725,0.0021018695551902056,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.466781347990036,-0.9330201148986816,0.01722378097474575,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49090656638145447,-0.9208900928497314,0.018862539902329445,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5096108317375183,-0.9113840460777283,0.020131714642047882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.458944171667099,-0.933667778968811,0.02915101684629917,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47691455483436584,-0.9228003025054932,0.03372807428240776,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.4891340136528015,-0.9151448011398315,0.035145796835422516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.4281214475631714,-0.9487501382827759,-0.02024015225470066,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3143281638622284,-1.038329839706421,0.006691062357276678,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.34333282709121704,-1.0185279846191406,0.005086393561214209,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3723374605178833,-0.9987262487411499,0.003481724299490452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15055760741233826,-1.1501284837722778,0.005797713529318571,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18513895571231842,-1.1265220642089844,0.006362739019095898,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.21972031891345978,-1.1029157638549805,0.006927764508873224,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.016375696286559105,-1.2164157629013062,0.0008112784707918763,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.016375696286559105,-1.2164157629013062,0.0008112784707918763,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09768185764551163,-1.1862232685089111,0.004932896234095097,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09768185764551163,-1.1862232685089111,0.004932896234095097,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1998250037431717,-1.1164976358413696,0.0066023534163832664,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2679204046726227,-1.0700138807296753,0.009258589707314968,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.3549347221851349,-1.0106089115142822,0.004444597754627466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.41294440627098083,-0.9710054993629456,0.0012352693593129516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4239511787891388,-0.9515928626060486,-0.018040573224425316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.43495792150497437,-0.9321802258491516,-0.037316419184207916,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.44675305485725403,-0.9189010858535767,-0.04597673565149307,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47010597586631775,-0.9326149225234985,-0.016455821692943573,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49069759249687195,-0.9197836518287659,-0.01695275865495205,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5075092911720276,-0.9102887511253357,-0.016395334154367447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47003647685050964,-0.9337155818939209,0.0010584968840703368,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49465861916542053,-0.9210392236709595,0.0016590568702667952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5144239068031311,-0.9114320278167725,0.0021018695551902056,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.466781347990036,-0.9330201148986816,0.01722378097474575,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49090656638145447,-0.9208900928497314,0.018862539902329445,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5096108317375183,-0.9113840460777283,0.020131714642047882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.458944171667099,-0.933667778968811,0.02915101684629917,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47691455483436584,-0.9228003025054932,0.03372807428240776,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4891340136528015,-0.9151448011398315,0.035145796835422516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4281214475631714,-0.9487501382827759,-0.02024015225470066,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.3143281042575836,-1.0383312702178955,0.006691125687211752,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.34333282709121704,-1.0185295343399048,0.005086462013423443,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.37233760952949524,-0.9987278580665588,0.0034817985724657774,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15055766701698303,-1.1501288414001465,0.005797113757580519,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18513891100883484,-1.1265227794647217,0.006362320389598608,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.21972009539604187,-1.1029165983200073,0.006927525624632835,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-1.1073859930038452,-0.04523973539471626,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04025549069046974,-1.1661348342895508,-0.041306838393211365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04859594255685806,-1.1651637554168701,-0.1077963188290596,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04759305343031883,-1.1021696329116821,-0.11584270745515823,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.041895948350429535,-1.0980476140975952,-0.03511019051074982,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.047766704112291336,-1.1058318614959717,-0.11542310565710068,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04025549069046974,-1.1661348342895508,-0.041306838393211365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04860157147049904,-1.1652319431304932,-0.10779662430286407,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04759307950735092,-1.1021696329116821,-0.11584270745515823,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.041895948350429535,-1.0980474948883057,-0.03511018678545952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04776671901345253,-1.1058318614959717,-0.11542310565710068,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.011671229265630245,-1.1513237953186035,0.05953005328774452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.028438976034522057,-1.0964789390563965,0.07454734295606613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04520672187209129,-1.0416340827941895,0.08956465125083923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061974458396434784,-0.9867892265319824,0.10458194464445114,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07874220609664917,-0.9319444298744202,0.11959924548864365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09550994634628296,-0.8770996928215027,0.13461653888225555,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11227770149707794,-0.8222547769546509,0.14963383972644806,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.011671229265630245,-1.1513237953186035,0.05953005328774452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.028438976034522057,-1.0964789390563965,0.07454734295606613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04520672187209129,-1.0416340827941895,0.08956465125083923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.061974458396434784,-0.9867892265319824,0.10458194464445114,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07874220609664917,-0.9319444298744202,0.11959924548864365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09550994634628296,-0.8770996928215027,0.13461653888225555,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11227770149707794,-0.8222547769546509,0.14963383972644806,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000201475850190036,-0.9722418785095215,-0.14919115602970123,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0005892250337637961,-0.9239920973777771,-0.1586616188287735,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0008191264350898564,-0.8816412091255188,-0.1650460809469223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000965782324783504,-0.8338497281074524,-0.17199371755123138,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009260521037504077,-0.7894641160964966,-0.1787613332271576,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009855821263045073,-0.7472310662269592,-0.1858702152967453,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0010774799156934023,-0.701810359954834,-0.19390098750591278,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0012344050919637084,-0.6598654389381409,-0.2025604248046875,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0013817251892760396,-0.6163104772567749,-0.2116517871618271,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0015554085839539766,-0.5745835900306702,-0.22130489349365234,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-4.080094484493202e-9,-0.5572226047515869,-0.25504016876220703,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.05321946740150452,-0.9728043079376221,-0.13540484011173248,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0611422061920166,-0.9249567985534668,-0.14386670291423798,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0675448477268219,-0.8828677535057068,-0.14998666942119598,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07445405423641205,-0.8353849649429321,-0.15652896463871002,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0812188908457756,-0.7914832234382629,-0.16406452655792236,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08782433718442917,-0.7495759725570679,-0.1711609959602356,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09488879889249802,-0.7045367956161499,-0.17913827300071716,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1021132692694664,-0.6629012227058411,-0.1871805638074875,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.10954880714416504,-0.6196542978286743,-0.19552777707576752,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11718635261058807,-0.5782843232154846,-0.20450741052627563,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.130685955286026,-0.5597018599510193,-0.22679835557937622,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09593209624290466,-0.9758880138397217,-0.09968416392803192,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11572341620922089,-0.9314195513725281,-0.10890156030654907,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.12923936545848846,-0.8905090093612671,-0.11479897797107697,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14030171930789948,-0.8434211015701294,-0.11923663318157196,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15148168802261353,-0.7996677160263062,-0.12370835244655609,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16206768155097961,-0.7577650547027588,-0.12778683006763458,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.17318931221961975,-0.7127749919891357,-0.13230259716510773,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18496829271316528,-0.6712863445281982,-0.137281134724617,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.19722120463848114,-0.6283156275749207,-0.14264149963855743,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.21037189662456512,-0.5873606204986572,-0.14853769540786743,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.22635473310947418,-0.5645979046821594,-0.1496460735797882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1114485040307045,-0.9743480086326599,-0.04414033517241478,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.13091173768043518,-0.9350237846374512,-0.04416065663099289,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14916199445724487,-0.8920276761054993,-0.04435349628329277,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16183798015117645,-0.8447558879852295,-0.04497577250003815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.17314064502716064,-0.8004806637763977,-0.045621003955602646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18378786742687225,-0.7564495801925659,-0.04648859426379204,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1949332356452942,-0.7142102122306824,-0.04765273630619049,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.20709916949272156,-0.6706497669219971,-0.04886495694518089,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.2207784652709961,-0.6274816393852234,-0.05000613257288933,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.23508237302303314,-0.586201548576355,-0.051051389425992966,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.261371910572052,-0.5668437480926514,-0.04426753148436546,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09435383975505829,-0.9739401936531067,-0.003538561752066016,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.10665377974510193,-0.9322013258934021,0.0028366604819893837,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1195690855383873,-0.8874881267547607,0.009444979019463062,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.13234521448612213,-0.8404097557067871,0.016443787142634392,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14393627643585205,-0.7963565587997437,0.02286320924758911,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15477345883846283,-0.7523983716964722,0.028403766453266144,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16548052430152893,-0.7100666761398315,0.03378380462527275,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1767299324274063,-0.666240930557251,0.039458952844142914,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1886899322271347,-0.6226159930229187,0.045453835278749466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.20093034207820892,-0.5807821750640869,0.0514611192047596,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.226354718208313,-0.5639346837997437,0.06943868845701218,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.05480232089757919,-0.974610447883606,0.027252409607172012,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.062322381883859634,-0.932665228843689,0.039828862994909286,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07066367566585541,-0.8881426453590393,0.05432049185037613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0772334411740303,-0.8397971987724304,0.06412467360496521,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08315979689359665,-0.7945641875267029,0.07280652970075607,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08907182514667511,-0.7498291730880737,0.08201833069324493,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0947408676147461,-0.7066192030906677,0.09060320258140564,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1006765067577362,-0.661895751953125,0.09969829767942429,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1071922704577446,-0.6174256801605225,0.10973715782165527,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11412540078163147,-0.5748741626739502,0.1204342469573021,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1306859701871872,-0.5585532188415527,0.15266753733158112,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00003861331060761586,-0.9742681384086609,0.03728646785020828,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00007370582898147404,-0.931037962436676,0.04832440987229347,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00013631631736643612,-0.8846620321273804,0.059495095163583755,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00004837480082642287,-0.8358415365219116,0.07039307057857513,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00020196962577756494,-0.7902050018310547,0.08008309453725815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0006517158471979201,-0.7449598908424377,0.08968555182218552,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0009354908252134919,-0.7013474106788635,0.09911472350358963,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0011437044013291597,-0.6562471985816956,0.10922586172819138,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0013765296898782253,-0.6114715337753296,0.12075980007648468,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0016984189860522747,-0.568547785282135,0.13292764127254486,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,1.4751110555266678e-8,-0.5558961629867554,0.18312935531139374,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.054611820727586746,-0.9744089245796204,0.026644639670848846,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06237895041704178,-0.932548463344574,0.039362672716379166,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07113239169120789,-0.8882089257240295,0.05405944213271141,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07796938717365265,-0.8399866223335266,0.06422466039657593,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.08431486040353775,-0.7947545647621155,0.07261218875646591,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09060870110988617,-0.7498478889465332,0.08059490472078323,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09697914868593216,-0.706676721572876,0.08887720853090286,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10372986644506454,-0.662110447883606,0.09804249554872513,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11100684851408005,-0.6177816390991211,0.10814370959997177,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11852095276117325,-0.5752485394477844,0.1185176745057106,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1306859254837036,-0.5585532188415527,0.1526675671339035,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09445957839488983,-0.9740180969238281,-0.003198588266968727,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10690294951200485,-0.9323270320892334,0.0032133073545992374,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.12003155797719955,-0.8876794576644897,0.009903966449201107,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13279490172863007,-0.8404514789581299,0.016049599274992943,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1445215940475464,-0.7963048815727234,0.02166743203997612,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15490631759166718,-0.7520984411239624,0.026063881814479828,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.16569198668003082,-0.7096750736236572,0.030472831800580025,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17725025117397308,-0.6658185720443726,0.035158440470695496,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18943540751934052,-0.6221289038658142,0.04017094522714615,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.20192711055278778,-0.5802738666534424,0.04547084867954254,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2263546884059906,-0.5639347434043884,0.0694386214017868,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11121190339326859,-0.9742534160614014,-0.04421302303671837,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1309155523777008,-0.9350387454032898,-0.044126272201538086,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.14983254671096802,-0.8893821835517883,-0.0439801923930645,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1610691249370575,-0.8471910953521729,-0.04468221962451935,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17447324097156525,-0.8008338212966919,-0.045133017003536224,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18727929890155792,-0.7573923468589783,-0.046168338507413864,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.19961294531822205,-0.7154890298843384,-0.04749053344130516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2126602977514267,-0.6713172197341919,-0.04887145385146141,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2267225831747055,-0.6299650073051453,-0.050278134644031525,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.24134185910224915,-0.5879727005958557,-0.051660824567079544,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2613718807697296,-0.5668437480926514,-0.04426756501197815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09643775969743729,-0.9728219509124756,-0.0996694564819336,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11328813433647156,-0.9333850741386414,-0.10726290941238403,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13009387254714966,-0.8878032565116882,-0.11401326209306717,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.14073750376701355,-0.8458969593048096,-0.11766349524259567,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15236201882362366,-0.7995477318763733,-0.12230784446001053,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.16275908052921295,-0.75596022605896,-0.1266995668411255,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17323821783065796,-0.714051365852356,-0.13100646436214447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18422387540340424,-0.6698259711265564,-0.13569019734859467,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1963694542646408,-0.6285068988800049,-0.14118042588233948,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.20899267494678497,-0.5865537524223328,-0.1470625102519989,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2263546884059906,-0.5645979046821594,-0.1496460884809494,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0543171726167202,-0.9702475666999817,-0.13755592703819275,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.060864634811878204,-0.9283533692359924,-0.1447409689426422,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06833530962467194,-0.8808549642562866,-0.15295270085334778,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07416108250617981,-0.8387351036071777,-0.1594380885362625,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0801144614815712,-0.7918815016746521,-0.16661080718040466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.08595883101224899,-0.7480621337890625,-0.17301645874977112,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09184194356203079,-0.706014096736908,-0.1799231916666031,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0979333147406578,-0.6616038680076599,-0.18755386769771576,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10451994836330414,-0.6199263334274292,-0.19592025876045227,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11131618171930313,-0.5775042176246643,-0.20462970435619354,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13068589568138123,-0.5597018599510193,-0.22679835557937622,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061947163194417953,0.0643671303987503,0.0008501767879351974,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061947163194417953,-0.11906889826059341,0.0020476914942264557,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0712297111749649,-0.03192993253469467,-0.09424827247858047,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.061947163194417953,0.0643671303987503,0.0008501767879351974,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06194929778575897,-0.11906922608613968,0.0020466106943786144,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0712297111749649,-0.03192991390824318,-0.09424828737974167,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[18,"Skin-2",1715679012,["282.!Root/11.joint_HipMaster","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari","282.!Root/11.joint_HipMaster/61.!joint_LeftHip","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee/63.!joint_LeftFoot","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee/63.!joint_LeftFoot/64.!joint_LeftToe","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD/280.joint_LeftFootD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD/280.joint_LeftFootD/281.joint_hidariashisakiEX","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi","282.!Root/11.joint_HipMaster/66.!joint_RightHip","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee/68.!joint_RightFoot","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee/68.!joint_RightFoot/69.!joint_RightToe","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD/276.joint_RightFootD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD/276.joint_RightFootD/277.joint_migiashisakiEX","282.!Root/0.!joint_Actuator","282.!Root/1.!joint_Master","282.!Root/1.!joint_Master/2.!joint_Center","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist","282.!Root/11.joint_HipMaster/7.joint_Torso","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/18.joint_Tongue1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/19.joint_Tongue2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/20.!joint_Eyes","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/21.joint_RightEye","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/22.joint_LeftEye","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1/224.joint_hidari?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1/224.joint_hidari?_5_1/225.!joint_hidari?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1/231.joint_migi?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1/231.joint_migi?_5_1/232.!joint_migi?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1/244.joint_hidari??_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1/244.joint_hidari??_4_1/245.!joint_hidari??_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1/257.joint_migi??_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1/257.joint_migi??_4_1/258.!joint_migi??_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/12.!joint_hidarikataP","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/14.!joint_LeftShoulderC","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/24.joint_LeftArmTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/29.joint_LeftHandTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M/39.joint_LeftThumb1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M/39.joint_LeftThumb1/40.joint_LeftThumb2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1/41.joint_LeftIndex2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1/41.joint_LeftIndex2/42.joint_LeftIndex3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1/43.joint_LeftMiddle2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1/43.joint_LeftMiddle2/44.joint_LeftMiddle3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1/45.joint_LeftRing2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1/45.joint_LeftRing2/46.joint_LeftRing3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1/47.joint_LeftPinky2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1/47.joint_LeftPinky2/48.joint_LeftPinky3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/34.joint_LeftThumb0","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/30.joint_LeftHandTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/31.joint_LeftHandTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/32.joint_LeftHandTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/25.joint_LeftArmTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/26.joint_LeftArmTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/27.joint_LeftArmTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/15.!joint_migikataP","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/17.!joint_RightShoulderC","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/50.joint_RightArmTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/55.joint_RightHandTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M/264.joint_RightThumb1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M/264.joint_RightThumb1/265.joint_RightThumb2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1/266.joint_RightIndex2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1/266.joint_RightIndex2/267.joint_RightIndex3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1/268.joint_RightMiddle2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1/268.joint_RightMiddle2/269.joint_RightMiddle3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1/270.joint_RightRing2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1/270.joint_RightRing2/271.joint_RightRing3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1/272.joint_RightPinky2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1/272.joint_RightPinky2/273.joint_RightPinky3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/259.joint_RightThumb0","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/56.joint_RightHandTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/57.joint_RightHandTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/58.joint_RightHandTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/51.joint_RightArmTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/52.joint_RightArmTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/53.joint_RightArmTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper/78.joint_LeftBreastUpper2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper/78.joint_LeftBreastUpper2/79.!joint_LeftBreastTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/80.!joint_LeftBreastLower","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/80.!joint_LeftBreastLower/81.!joint_LeftBreastLowerTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper/83.joint_RightBreastUpper2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper/83.joint_RightBreastUpper2/84.!joint_RightBreastTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/85.!joint_RightBreastLower","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/85.!joint_RightBreastLower/86.!joint_RightBreastLowerTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1/238.joint_hidari?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1/238.joint_hidari?_5_1/239.!joint_hidari?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1/251.joint_migi?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1/251.joint_migi?_5_1/252.!joint_migi?_6_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0/195.joint_Skirt_9_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0/195.joint_Skirt_9_0/207.!joint_Skirt_10_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1/196.joint_Skirt_9_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1/196.joint_Skirt_9_1/208.!joint_Skirt_10_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2/197.joint_Skirt_9_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2/197.joint_Skirt_9_2/209.!joint_Skirt_10_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3/198.joint_Skirt_9_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3/198.joint_Skirt_9_3/210.!joint_Skirt_10_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4/199.joint_Skirt_9_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4/199.joint_Skirt_9_4/211.!joint_Skirt_10_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5/200.joint_Skirt_9_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5/200.joint_Skirt_9_5/212.!joint_Skirt_10_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6/201.joint_Skirt_9_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6/201.joint_Skirt_9_6/213.!joint_Skirt_10_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7/202.joint_Skirt_9_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7/202.joint_Skirt_9_7/214.!joint_Skirt_10_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8/203.joint_Skirt_9_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8/203.joint_Skirt_9_8/215.!joint_Skirt_10_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9/204.joint_Skirt_9_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9/204.joint_Skirt_9_9/216.!joint_Skirt_10_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10/205.joint_Skirt_9_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10/205.joint_Skirt_9_10/217.!joint_Skirt_10_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11/206.joint_Skirt_9_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11/206.joint_Skirt_9_11/218.!joint_Skirt_10_11","282.!Root/1.!joint_Master/74.!IK_LeftHipParent","282.!Root/1.!joint_Master/74.!IK_LeftHipParent/70.!IK_LeftHip","282.!Root/1.!joint_Master/74.!IK_LeftHipParent/70.!IK_LeftHip/71.!IK_LeftToe","282.!Root/1.!joint_Master/75.!IK_RightHipParent","282.!Root/1.!joint_Master/75.!IK_RightHipParent/72.!IK_RightHip","282.!Root/1.!joint_Master/75.!IK_RightHipParent/72.!IK_RightHip/73.!IK_RightToe"],[[[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009369727922603488,-0.9452734589576721,-0.051281318068504333,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06797207146883011,-0.835262656211853,-0.02561047114431858,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07393646240234375,-0.8738264441490173,-0.03741028159856796,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06276028603315353,-0.4905835688114166,-0.05765167623758316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06198146939277649,-0.1211918443441391,0.0017207800410687923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0712292268872261,-0.03274185210466385,-0.0933724120259285,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07393646240234375,-0.8738264441490173,-0.03741028159856796,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06276028603315353,-0.4905835688114166,-0.05765167623758316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06198146939277649,-0.1211918443441391,0.0017207800410687923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.062019478529691696,-0.06168390437960625,-0.06225859001278877,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06797207146883011,-0.835262656211853,-0.02561047114431858,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07393646240234375,-0.873827338218689,-0.037410300225019455,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06276465207338333,-0.49055933952331543,-0.05718391761183739,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06198198348283768,-0.1211351752281189,0.001985392067581415,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07122904062271118,-0.03284759446978569,-0.0932578444480896,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07393646240234375,-0.873827338218689,-0.037410300225019455,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06276465207338333,-0.49055933952331543,-0.05718391761183739,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06198198348283768,-0.1211351752281189,0.001985392067581415,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.062019649893045425,-0.06166500225663185,-0.06217039003968239,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.024347474798560143,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.024347474798560143,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.8772556781768799,0.019334007054567337,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-1.1615985329171963e-7,-0.9594677090644836,-0.053706951439380646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-3.2159005058929324e-7,-1.075741171836853,-0.05197480320930481,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-7.337343390645401e-7,-1.2401456832885742,-0.00038680803845636547,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-9.340284350400907e-7,-1.307875633239746,-0.010965957306325436,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0000010207168088527396,-1.3076056241989136,-0.0966591089963913,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000001038780624185165,-1.3134900331497192,-0.09667804092168808,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-1.6740195751190186,-6.2770686426461e-9,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.03534664958715439,-1.360243320465088,-0.06479596346616745,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.03534669056534767,-1.3602383136749268,-0.06479302048683167,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397393703460693,-1.4451022148132324,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.4020898342132568,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.3590770959854126,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.316064476966858,0.046577081084251404,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397396683692932,-1.2730519771575928,0.0465770922601223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397398173809052,-1.230039358139038,0.0465770922601223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397393703460693,-1.187026858329773,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397393703460693,-1.4451022148132324,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.4020898342132568,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.3590770959854126,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.316064476966858,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397396683692932,-1.2730519771575928,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397398173809052,-1.230039358139038,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397393703460693,-1.187026858329773,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.371170163154602,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.3515465259552002,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.331923007965088,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.3122996091842651,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.2926760911941528,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.2730525732040405,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.371170163154602,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.3515465259552002,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.331923007965088,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.3122996091842651,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.2926760911941528,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.2730525732040405,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.01637706160545349,-1.2164157629013062,0.0008112633368000388,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.01637706160545349,-1.2164157629013062,0.0008112633368000388,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09768278896808624,-1.1862224340438843,0.004933790769428015,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09768278896808624,-1.1862224340438843,0.004933790769428015,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.19982555508613586,-1.1164966821670532,0.0066027031280100346,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.26792073249816895,-1.0700128078460693,0.009258531965315342,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3549346923828125,-1.0106072425842285,0.004444525111466646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.41294407844543457,-0.9710036516189575,0.0012351871700957417,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.43495792150497437,-0.9321802258491516,-0.037316419184207916,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.44675305485725403,-0.9189010858535767,-0.04597673565149307,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47010597586631775,-0.9326149225234985,-0.016455821692943573,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49069759249687195,-0.9197836518287659,-0.01695275865495205,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5075092911720276,-0.9102887511253357,-0.016395334154367447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47003647685050964,-0.9337155818939209,0.0010584968840703368,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49465861916542053,-0.9210392236709595,0.0016590568702667952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5144239068031311,-0.9114320278167725,0.0021018695551902056,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.466781347990036,-0.9330201148986816,0.01722378097474575,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49090656638145447,-0.9208900928497314,0.018862539902329445,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5096108317375183,-0.9113840460777283,0.020131714642047882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.458944171667099,-0.933667778968811,0.02915101684629917,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47691455483436584,-0.9228003025054932,0.03372807428240776,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.4891340136528015,-0.9151448011398315,0.035145796835422516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.4281214475631714,-0.9487501382827759,-0.02024015225470066,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3143281638622284,-1.038329839706421,0.006691062357276678,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.34333282709121704,-1.0185279846191406,0.005086393561214209,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3723374605178833,-0.9987262487411499,0.003481724299490452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15055760741233826,-1.1501284837722778,0.005797713529318571,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18513895571231842,-1.1265220642089844,0.006362739019095898,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.21972031891345978,-1.1029157638549805,0.006927764508873224,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.016375696286559105,-1.2164157629013062,0.0008112784707918763,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.016375696286559105,-1.2164157629013062,0.0008112784707918763,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09768185764551163,-1.1862232685089111,0.004932896234095097,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09768185764551163,-1.1862232685089111,0.004932896234095097,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1998250037431717,-1.1164976358413696,0.0066023534163832664,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2679204046726227,-1.0700138807296753,0.009258589707314968,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.3549347221851349,-1.0106089115142822,0.004444597754627466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.41294440627098083,-0.9710054993629456,0.0012352693593129516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.43495792150497437,-0.9321802258491516,-0.037316419184207916,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.44675305485725403,-0.9189010858535767,-0.04597673565149307,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47010597586631775,-0.9326149225234985,-0.016455821692943573,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49069759249687195,-0.9197836518287659,-0.01695275865495205,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5075092911720276,-0.9102887511253357,-0.016395334154367447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47003647685050964,-0.9337155818939209,0.0010584968840703368,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49465861916542053,-0.9210392236709595,0.0016590568702667952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5144239068031311,-0.9114320278167725,0.0021018695551902056,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.466781347990036,-0.9330201148986816,0.01722378097474575,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49090656638145447,-0.9208900928497314,0.018862539902329445,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5096108317375183,-0.9113840460777283,0.020131714642047882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.458944171667099,-0.933667778968811,0.02915101684629917,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47691455483436584,-0.9228003025054932,0.03372807428240776,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4891340136528015,-0.9151448011398315,0.035145796835422516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4281214475631714,-0.9487501382827759,-0.02024015225470066,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.3143281042575836,-1.0383312702178955,0.006691125687211752,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.34333282709121704,-1.0185295343399048,0.005086462013423443,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.37233760952949524,-0.9987278580665588,0.0034817985724657774,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15055766701698303,-1.1501288414001465,0.005797113757580519,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18513891100883484,-1.1265227794647217,0.006362320389598608,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.21972009539604187,-1.1029165983200073,0.006927525624632835,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-1.1073859930038452,-0.04523973539471626,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04025549069046974,-1.1661348342895508,-0.041306838393211365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04859594255685806,-1.1651637554168701,-0.1077963188290596,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04759305343031883,-1.1021696329116821,-0.11584270745515823,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.041895948350429535,-1.0980476140975952,-0.03511019051074982,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.047766704112291336,-1.1058318614959717,-0.11542310565710068,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04025549069046974,-1.1661348342895508,-0.041306838393211365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04860157147049904,-1.1652319431304932,-0.10779662430286407,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04759307950735092,-1.1021696329116821,-0.11584270745515823,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.041895948350429535,-1.0980474948883057,-0.03511018678545952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04776671901345253,-1.1058318614959717,-0.11542310565710068,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.011671229265630245,-1.1513237953186035,0.05953005328774452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.028438976034522057,-1.0964789390563965,0.07454734295606613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04520672187209129,-1.0416340827941895,0.08956465125083923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061974458396434784,-0.9867892265319824,0.10458194464445114,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07874220609664917,-0.9319444298744202,0.11959924548864365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09550994634628296,-0.8770996928215027,0.13461653888225555,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11227770149707794,-0.8222547769546509,0.14963383972644806,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.011671229265630245,-1.1513237953186035,0.05953005328774452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.028438976034522057,-1.0964789390563965,0.07454734295606613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04520672187209129,-1.0416340827941895,0.08956465125083923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.061974458396434784,-0.9867892265319824,0.10458194464445114,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07874220609664917,-0.9319444298744202,0.11959924548864365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09550994634628296,-0.8770996928215027,0.13461653888225555,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11227770149707794,-0.8222547769546509,0.14963383972644806,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000201475850190036,-0.9722418785095215,-0.14919115602970123,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0005892250337637961,-0.9239920973777771,-0.1586616188287735,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0008191264350898564,-0.8816412091255188,-0.1650460809469223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000965782324783504,-0.8338497281074524,-0.17199371755123138,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009260521037504077,-0.7894641160964966,-0.1787613332271576,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009855821263045073,-0.7472310662269592,-0.1858702152967453,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0010774799156934023,-0.701810359954834,-0.19390098750591278,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0012344050919637084,-0.6598654389381409,-0.2025604248046875,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0013817251892760396,-0.6163104772567749,-0.2116517871618271,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0015554085839539766,-0.5745835900306702,-0.22130489349365234,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-4.080094484493202e-9,-0.5572226047515869,-0.25504016876220703,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.05321946740150452,-0.9728043079376221,-0.13540484011173248,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0611422061920166,-0.9249567985534668,-0.14386670291423798,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0675448477268219,-0.8828677535057068,-0.14998666942119598,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07445405423641205,-0.8353849649429321,-0.15652896463871002,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0812188908457756,-0.7914832234382629,-0.16406452655792236,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08782433718442917,-0.7495759725570679,-0.1711609959602356,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09488879889249802,-0.7045367956161499,-0.17913827300071716,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1021132692694664,-0.6629012227058411,-0.1871805638074875,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.10954880714416504,-0.6196542978286743,-0.19552777707576752,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11718635261058807,-0.5782843232154846,-0.20450741052627563,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.130685955286026,-0.5597018599510193,-0.22679835557937622,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09593209624290466,-0.9758880138397217,-0.09968416392803192,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11572341620922089,-0.9314195513725281,-0.10890156030654907,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.12923936545848846,-0.8905090093612671,-0.11479897797107697,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14030171930789948,-0.8434211015701294,-0.11923663318157196,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15148168802261353,-0.7996677160263062,-0.12370835244655609,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16206768155097961,-0.7577650547027588,-0.12778683006763458,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.17318931221961975,-0.7127749919891357,-0.13230259716510773,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18496829271316528,-0.6712863445281982,-0.137281134724617,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.19722120463848114,-0.6283156275749207,-0.14264149963855743,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.21037189662456512,-0.5873606204986572,-0.14853769540786743,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.22635473310947418,-0.5645979046821594,-0.1496460735797882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1114485040307045,-0.9743480086326599,-0.04414033517241478,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.13091173768043518,-0.9350237846374512,-0.04416065663099289,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14916199445724487,-0.8920276761054993,-0.04435349628329277,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16183798015117645,-0.8447558879852295,-0.04497577250003815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.17314064502716064,-0.8004806637763977,-0.045621003955602646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18378786742687225,-0.7564495801925659,-0.04648859426379204,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1949332356452942,-0.7142102122306824,-0.04765273630619049,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.20709916949272156,-0.6706497669219971,-0.04886495694518089,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.2207784652709961,-0.6274816393852234,-0.05000613257288933,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.23508237302303314,-0.586201548576355,-0.051051389425992966,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.261371910572052,-0.5668437480926514,-0.04426753148436546,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09435383975505829,-0.9739401936531067,-0.003538561752066016,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.10665377974510193,-0.9322013258934021,0.0028366604819893837,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1195690855383873,-0.8874881267547607,0.009444979019463062,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.13234521448612213,-0.8404097557067871,0.016443787142634392,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14393627643585205,-0.7963565587997437,0.02286320924758911,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15477345883846283,-0.7523983716964722,0.028403766453266144,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16548052430152893,-0.7100666761398315,0.03378380462527275,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1767299324274063,-0.666240930557251,0.039458952844142914,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1886899322271347,-0.6226159930229187,0.045453835278749466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.20093034207820892,-0.5807821750640869,0.0514611192047596,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.226354718208313,-0.5639346837997437,0.06943868845701218,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.05480232089757919,-0.974610447883606,0.027252409607172012,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.062322381883859634,-0.932665228843689,0.039828862994909286,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07066367566585541,-0.8881426453590393,0.05432049185037613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0772334411740303,-0.8397971987724304,0.06412467360496521,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08315979689359665,-0.7945641875267029,0.07280652970075607,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08907182514667511,-0.7498291730880737,0.08201833069324493,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0947408676147461,-0.7066192030906677,0.09060320258140564,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1006765067577362,-0.661895751953125,0.09969829767942429,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1071922704577446,-0.6174256801605225,0.10973715782165527,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11412540078163147,-0.5748741626739502,0.1204342469573021,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1306859701871872,-0.5585532188415527,0.15266753733158112,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00003861331060761586,-0.9742681384086609,0.03728646785020828,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00007370582898147404,-0.931037962436676,0.04832440987229347,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00013631631736643612,-0.8846620321273804,0.059495095163583755,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00004837480082642287,-0.8358415365219116,0.07039307057857513,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00020196962577756494,-0.7902050018310547,0.08008309453725815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0006517158471979201,-0.7449598908424377,0.08968555182218552,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0009354908252134919,-0.7013474106788635,0.09911472350358963,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0011437044013291597,-0.6562471985816956,0.10922586172819138,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0013765296898782253,-0.6114715337753296,0.12075980007648468,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0016984189860522747,-0.568547785282135,0.13292764127254486,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,1.4751110555266678e-8,-0.5558961629867554,0.18312935531139374,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.054611820727586746,-0.9744089245796204,0.026644639670848846,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06237895041704178,-0.932548463344574,0.039362672716379166,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07113239169120789,-0.8882089257240295,0.05405944213271141,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07796938717365265,-0.8399866223335266,0.06422466039657593,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.08431486040353775,-0.7947545647621155,0.07261218875646591,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09060870110988617,-0.7498478889465332,0.08059490472078323,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09697914868593216,-0.706676721572876,0.08887720853090286,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10372986644506454,-0.662110447883606,0.09804249554872513,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11100684851408005,-0.6177816390991211,0.10814370959997177,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11852095276117325,-0.5752485394477844,0.1185176745057106,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1306859254837036,-0.5585532188415527,0.1526675671339035,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09445957839488983,-0.9740180969238281,-0.003198588266968727,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10690294951200485,-0.9323270320892334,0.0032133073545992374,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.12003155797719955,-0.8876794576644897,0.009903966449201107,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13279490172863007,-0.8404514789581299,0.016049599274992943,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1445215940475464,-0.7963048815727234,0.02166743203997612,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15490631759166718,-0.7520984411239624,0.026063881814479828,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.16569198668003082,-0.7096750736236572,0.030472831800580025,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17725025117397308,-0.6658185720443726,0.035158440470695496,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18943540751934052,-0.6221289038658142,0.04017094522714615,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.20192711055278778,-0.5802738666534424,0.04547084867954254,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2263546884059906,-0.5639347434043884,0.0694386214017868,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11121190339326859,-0.9742534160614014,-0.04421302303671837,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1309155523777008,-0.9350387454032898,-0.044126272201538086,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.14983254671096802,-0.8893821835517883,-0.0439801923930645,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1610691249370575,-0.8471910953521729,-0.04468221962451935,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17447324097156525,-0.8008338212966919,-0.045133017003536224,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18727929890155792,-0.7573923468589783,-0.046168338507413864,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.19961294531822205,-0.7154890298843384,-0.04749053344130516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2126602977514267,-0.6713172197341919,-0.04887145385146141,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2267225831747055,-0.6299650073051453,-0.050278134644031525,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.24134185910224915,-0.5879727005958557,-0.051660824567079544,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2613718807697296,-0.5668437480926514,-0.04426756501197815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09643775969743729,-0.9728219509124756,-0.0996694564819336,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11328813433647156,-0.9333850741386414,-0.10726290941238403,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13009387254714966,-0.8878032565116882,-0.11401326209306717,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.14073750376701355,-0.8458969593048096,-0.11766349524259567,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15236201882362366,-0.7995477318763733,-0.12230784446001053,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.16275908052921295,-0.75596022605896,-0.1266995668411255,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17323821783065796,-0.714051365852356,-0.13100646436214447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18422387540340424,-0.6698259711265564,-0.13569019734859467,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1963694542646408,-0.6285068988800049,-0.14118042588233948,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.20899267494678497,-0.5865537524223328,-0.1470625102519989,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2263546884059906,-0.5645979046821594,-0.1496460884809494,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0543171726167202,-0.9702475666999817,-0.13755592703819275,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.060864634811878204,-0.9283533692359924,-0.1447409689426422,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06833530962467194,-0.8808549642562866,-0.15295270085334778,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07416108250617981,-0.8387351036071777,-0.1594380885362625,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0801144614815712,-0.7918815016746521,-0.16661080718040466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.08595883101224899,-0.7480621337890625,-0.17301645874977112,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09184194356203079,-0.706014096736908,-0.1799231916666031,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0979333147406578,-0.6616038680076599,-0.18755386769771576,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10451994836330414,-0.6199263334274292,-0.19592025876045227,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11131618171930313,-0.5775042176246643,-0.20462970435619354,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13068589568138123,-0.5597018599510193,-0.22679835557937622,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061947163194417953,0.0643671303987503,0.0008501767879351974,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061947163194417953,-0.11906889826059341,0.0020476914942264557,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0712297111749649,-0.03192993253469467,-0.09424827247858047,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.061947163194417953,0.0643671303987503,0.0008501767879351974,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06194929778575897,-0.11906922608613968,0.0020466106943786144,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0712297111749649,-0.03192991390824318,-0.09424828737974167,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[30,"1.men2",[{"metallic":0.4000000059604645,"roughness":0.1961161345243454}],[{"rasterizerState":{},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthWrite":false}}],[{"USE_VERTEX_COLOR":true}]]],0,0,[0],[2],[0]],[[[8,".bin",925141699,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":160248,"length":30492,"count":7623,"stride":4}},{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[1],"indexView":{"offset":280676,"length":15216,"count":3804,"stride":4}},{"primitiveMode":7,"jointMapIndex":2,"vertexBundelIndices":[2],"indexView":{"offset":451740,"length":13200,"count":6600,"stride":2}},{"primitiveMode":7,"jointMapIndex":3,"vertexBundelIndices":[3],"indexView":{"offset":563676,"length":9312,"count":4656,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[4],"indexView":{"offset":587948,"length":876,"count":438,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[5],"indexView":{"offset":687208,"length":11712,"count":2928,"stride":4}},{"primitiveMode":7,"jointMapIndex":6,"vertexBundelIndices":[6],"indexView":{"offset":843416,"length":14382,"count":7191,"stride":2}},{"primitiveMode":7,"jointMapIndex":7,"vertexBundelIndices":[7],"indexView":{"offset":926350,"length":6822,"count":3411,"stride":2}},{"primitiveMode":7,"jointMapIndex":8,"vertexBundelIndices":[8],"indexView":{"offset":938276,"length":420,"count":210,"stride":2}},{"primitiveMode":7,"jointMapIndex":9,"vertexBundelIndices":[9],"indexView":{"offset":942128,"length":240,"count":120,"stride":2}},{"primitiveMode":7,"jointMapIndex":10,"vertexBundelIndices":[10],"indexView":{"offset":945448,"length":168,"count":84,"stride":2}},{"primitiveMode":7,"jointMapIndex":11,"vertexBundelIndices":[11],"indexView":{"offset":950368,"length":294,"count":147,"stride":2}},{"primitiveMode":7,"jointMapIndex":12,"vertexBundelIndices":[12],"indexView":{"offset":953654,"length":180,"count":90,"stride":2}},{"primitiveMode":7,"jointMapIndex":13,"vertexBundelIndices":[13],"indexView":{"offset":957266,"length":240,"count":120,"stride":2}},{"primitiveMode":7,"jointMapIndex":14,"vertexBundelIndices":[14],"indexView":{"offset":960586,"length":168,"count":84,"stride":2}},{"primitiveMode":7,"jointMapIndex":15,"vertexBundelIndices":[15],"indexView":{"offset":966562,"length":324,"count":162,"stride":2}},{"primitiveMode":7,"jointMapIndex":16,"vertexBundelIndices":[16],"indexView":{"offset":990294,"length":1440,"count":720,"stride":2}},{"primitiveMode":7,"jointMapIndex":17,"vertexBundelIndices":[17],"indexView":{"offset":994902,"length":252,"count":126,"stride":2}},{"primitiveMode":7,"jointMapIndex":5,"vertexBundelIndices":[18],"indexView":{"offset":1018562,"length":1476,"count":738,"stride":2}},{"primitiveMode":7,"jointMapIndex":4,"vertexBundelIndices":[19],"indexView":{"offset":1033414,"length":1038,"count":519,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[20],"indexView":{"offset":1055748,"length":1668,"count":834,"stride":2}},{"primitiveMode":7,"jointMapIndex":1,"vertexBundelIndices":[21],"indexView":{"offset":1118136,"length":7728,"count":1932,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":160248,"count":1821,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":190740,"length":89936,"count":1022,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":295892,"length":155848,"count":1771,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":464940,"length":98736,"count":1122,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":572988,"length":14960,"count":170,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":588824,"length":98384,"count":1118,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":698920,"length":144496,"count":1642,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":857798,"length":68552,"count":779,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":933172,"length":5104,"count":58,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":938696,"length":3432,"count":39,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":942368,"length":3080,"count":35,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":945616,"length":4752,"count":54,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":950662,"length":2992,"count":34,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":953834,"length":3432,"count":39,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":957506,"length":3080,"count":35,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":960754,"length":5808,"count":66,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":966886,"length":23408,"count":266,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":991734,"length":3168,"count":36,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":995154,"length":23408,"count":266,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":1020038,"length":13376,"count":152,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":1034452,"length":21296,"count":242,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]},{"view":{"offset":1057416,"length":60720,"count":690,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false}]}],"jointMaps":[[0,30,36,37,38,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,57,58,59,60],[0,1,27,28,30,140,141,142,143,144,145,150,151,153,154,158,169,170,180,191,202,260,263,271,272,274,275],[0,1,27,28,29,63,65,66,67,68,69,85,86,87,88,89,90,91,93,95,98,99,119,124,129,235],[0,28,29,30,63,65,93,95,96,97,98,99,116,117,118,119,120,121,124,129,133,134,135,136,137,138],[0,147,148,151,153,154,217,219,220,228,230,231,239,241,242,243,251,252,253,257,261,262,263,264,268,269,272,274,275],[0,154,155,156,219,220,221,222,230,231,232,233,239,240,241,242,243,244,251,252,253,255,262,264,265,266,275,276,277],[0,28,29,30,63,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,93,95,124,129],[0,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],[0,1,27,148,149,159,160,170,171,172,174,181,182,183,185,192,193,194,195,196,202,203,204,205,206,213,214,215,216,217],[0,150,151,153,161,162,164,171,172,173,174,175,182,183,185,186,193,194,195,196,197,204,205,206,208,215,216,217,219],[0,1,27,149,150,153,154,160,161,164,165,171,172,175,176,182,183,202,203,204,205,206,208,213,214,215,216,217,219],[0,1,27,148,154,155,164,165,166,175,176,186,187,197,198,209,213,214,219,220,224,225,231,235,236,247,258,269],[0,148,149,202,214,215,216,217,225,226,227,228,236,237,238,239,240,247,248,249,251,258,259,260,262,269,270],[0,150,151,153,215,216,217,219,226,227,228,230,237,238,239,240,241,248,249,251,252,259,260,261,262,263,271,272,274],[0,1,27,149,150,153,154,202,213,214,215,216,217,219,224,225,226,227,228,230,248,249,259,260,263,264,270,271,274,275],[0,154,155,164,165,166,175,176,177,186,187,188,197,198,208,209,219,220,230,231,241,242,252,253,263,264,265,274,275,276],[0,154,155,156,164,165,166,167,175,176,177,178,186,187,188,189,197,198,199,200,209,210,211,220,221,222,276],[0,151,153,154,162,164,165,173,174,175,176,185,186,187,188,195,196,197,198,199,206,208,209,217,219,220]]},"minPosition",8,[1,-0.5343366265296936,0.5218374133110046,-0.15989387035369873],"maxPosition",8,[1,0.5343366265296936,1.5886567831039429,0.24205587804317474]]],-1],0,0,[],[],[]],[[[18,"Skin-1",1715679012,["282.!Root/11.joint_HipMaster","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari","282.!Root/11.joint_HipMaster/61.!joint_LeftHip","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee/63.!joint_LeftFoot","282.!Root/11.joint_HipMaster/61.!joint_LeftHip/62.!joint_LeftKnee/63.!joint_LeftFoot/64.!joint_LeftToe","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD/280.joint_LeftFootD","282.!Root/11.joint_HipMaster/60.!joint_koshikyanseruhidari/278.joint_LeftHipD/279.joint_LeftKneeD/280.joint_LeftFootD/281.joint_hidariashisakiEX","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi","282.!Root/11.joint_HipMaster/66.!joint_RightHip","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee/68.!joint_RightFoot","282.!Root/11.joint_HipMaster/66.!joint_RightHip/67.!joint_RightKnee/68.!joint_RightFoot/69.!joint_RightToe","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD/276.joint_RightFootD","282.!Root/11.joint_HipMaster/65.!joint_koshikyanserumigi/274.joint_RightHipD/275.joint_RightKneeD/276.joint_RightFootD/277.joint_migiashisakiEX","282.!Root/0.!joint_Actuator","282.!Root/1.!joint_Master","282.!Root/1.!joint_Master/2.!joint_Center","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist","282.!Root/11.joint_HipMaster/7.joint_Torso","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/18.joint_Tongue1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/19.joint_Tongue2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/20.!joint_Eyes","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/21.joint_RightEye","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/22.joint_LeftEye","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1/224.joint_hidari?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/219.joint_hidari?_0_1/220.joint_hidari?_1_1/221.joint_hidari?_2_1/222.joint_hidari?_3_1/223.joint_hidari?_4_1/224.joint_hidari?_5_1/225.!joint_hidari?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1/231.joint_migi?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/226.joint_migi?_0_1/227.joint_migi?_1_1/228.joint_migi?_2_1/229.joint_migi?_3_1/230.joint_migi?_4_1/231.joint_migi?_5_1/232.!joint_migi?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1/244.joint_hidari??_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/240.joint_hidari??_0_1/241.joint_hidari??_1_1/242.joint_hidari??_2_1/243.joint_hidari??_3_1/244.joint_hidari??_4_1/245.!joint_hidari??_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1/257.joint_migi??_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/9.joint_Neck/10.joint_Head/253.joint_migi??_0_1/254.joint_migi??_1_1/255.joint_migi??_2_1/256.joint_migi??_3_1/257.joint_migi??_4_1/258.!joint_migi??_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/12.!joint_hidarikataP","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/14.!joint_LeftShoulderC","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/24.joint_LeftArmTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/29.joint_LeftHandTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M/39.joint_LeftThumb1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/283.!joint_LeftThumb0M/39.joint_LeftThumb1/40.joint_LeftThumb2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1/41.joint_LeftIndex2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/35.joint_LeftIndex1/41.joint_LeftIndex2/42.joint_LeftIndex3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1/43.joint_LeftMiddle2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/36.joint_LeftMiddle1/43.joint_LeftMiddle2/44.joint_LeftMiddle3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1/45.joint_LeftRing2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/37.joint_LeftRing1/45.joint_LeftRing2/46.joint_LeftRing3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1/47.joint_LeftPinky2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/38.joint_LeftPinky1/47.joint_LeftPinky2/48.joint_LeftPinky3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/33.joint_LeftWrist/34.joint_LeftThumb0","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/30.joint_LeftHandTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/31.joint_LeftHandTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/28.joint_LeftElbow/32.joint_LeftHandTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/25.joint_LeftArmTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/26.joint_LeftArmTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/13.joint_LeftShoulder/23.joint_LeftArm/27.joint_LeftArmTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/15.!joint_migikataP","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/17.!joint_RightShoulderC","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/50.joint_RightArmTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/55.joint_RightHandTwist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M/264.joint_RightThumb1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/284.!joint_RightThumb0M/264.joint_RightThumb1/265.joint_RightThumb2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1/266.joint_RightIndex2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/260.joint_RightIndex1/266.joint_RightIndex2/267.joint_RightIndex3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1/268.joint_RightMiddle2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/261.joint_RightMiddle1/268.joint_RightMiddle2/269.joint_RightMiddle3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1/270.joint_RightRing2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/262.joint_RightRing1/270.joint_RightRing2/271.joint_RightRing3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1/272.joint_RightPinky2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/263.joint_RightPinky1/272.joint_RightPinky2/273.joint_RightPinky3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/59.joint_RightWrist/259.joint_RightThumb0","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/56.joint_RightHandTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/57.joint_RightHandTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/54.joint_RightElbow/58.joint_RightHandTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/51.joint_RightArmTwist1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/52.joint_RightArmTwist2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/16.joint_RightShoulder/49.joint_RightArm/53.joint_RightArmTwist3","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper/78.joint_LeftBreastUpper2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/77.!joint_LeftBreastUpper/78.joint_LeftBreastUpper2/79.!joint_LeftBreastTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/80.!joint_LeftBreastLower","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/80.!joint_LeftBreastLower/81.!joint_LeftBreastLowerTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper/83.joint_RightBreastUpper2","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/82.!joint_RightBreastUpper/83.joint_RightBreastUpper2/84.!joint_RightBreastTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/85.!joint_RightBreastLower","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/76.!joint_otsu_ichousei/85.!joint_RightBreastLower/86.!joint_RightBreastLowerTip","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1/238.joint_hidari?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/233.joint_hidari?_0_1/234.joint_hidari?_1_1/235.joint_hidari?_2_1/236.joint_hidari?_3_1/237.joint_hidari?_4_1/238.joint_hidari?_5_1/239.!joint_hidari?_6_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1/251.joint_migi?_5_1","282.!Root/11.joint_HipMaster/7.joint_Torso/8.joint_Torso2/246.joint_migi?_0_1/247.joint_migi?_1_1/248.joint_migi?_2_1/249.joint_migi?_3_1/250.joint_migi?_4_1/251.joint_migi?_5_1/252.!joint_migi?_6_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0/195.joint_Skirt_9_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/87.joint_Skirt_0_0/99.joint_Skirt_1_0/111.joint_Skirt_2_0/123.joint_Skirt_3_0/135.joint_Skirt_4_0/147.!joint_Skirt_5_0/159.joint_Skirt_6_0/171.joint_Skirt_7_0/183.joint_Skirt_8_0/195.joint_Skirt_9_0/207.!joint_Skirt_10_0","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1/196.joint_Skirt_9_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/88.joint_Skirt_0_1/100.joint_Skirt_1_1/112.joint_Skirt_2_1/124.joint_Skirt_3_1/136.joint_Skirt_4_1/148.!joint_Skirt_5_1/160.joint_Skirt_6_1/172.joint_Skirt_7_1/184.joint_Skirt_8_1/196.joint_Skirt_9_1/208.!joint_Skirt_10_1","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2/197.joint_Skirt_9_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/89.joint_Skirt_0_2/101.joint_Skirt_1_2/113.joint_Skirt_2_2/125.joint_Skirt_3_2/137.joint_Skirt_4_2/149.joint_Skirt_5_2/161.joint_Skirt_6_2/173.joint_Skirt_7_2/185.joint_Skirt_8_2/197.joint_Skirt_9_2/209.!joint_Skirt_10_2","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3/198.joint_Skirt_9_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/90.joint_Skirt_0_3/102.joint_Skirt_1_3/114.joint_Skirt_2_3/126.joint_Skirt_3_3/138.!joint_Skirt_4_3/150.joint_Skirt_5_3/162.joint_Skirt_6_3/174.joint_Skirt_7_3/186.joint_Skirt_8_3/198.joint_Skirt_9_3/210.!joint_Skirt_10_3","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4/199.joint_Skirt_9_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/91.joint_Skirt_0_4/103.joint_Skirt_1_4/115.joint_Skirt_2_4/127.joint_Skirt_3_4/139.joint_Skirt_4_4/151.joint_Skirt_5_4/163.joint_Skirt_6_4/175.joint_Skirt_7_4/187.joint_Skirt_8_4/199.joint_Skirt_9_4/211.!joint_Skirt_10_4","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5/200.joint_Skirt_9_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/92.joint_Skirt_0_5/104.joint_Skirt_1_5/116.joint_Skirt_2_5/128.joint_Skirt_3_5/140.joint_Skirt_4_5/152.!joint_Skirt_5_5/164.joint_Skirt_6_5/176.joint_Skirt_7_5/188.joint_Skirt_8_5/200.joint_Skirt_9_5/212.!joint_Skirt_10_5","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6/201.joint_Skirt_9_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/93.joint_Skirt_0_6/105.joint_Skirt_1_6/117.joint_Skirt_2_6/129.joint_Skirt_3_6/141.joint_Skirt_4_6/153.!joint_Skirt_5_6/165.joint_Skirt_6_6/177.joint_Skirt_7_6/189.joint_Skirt_8_6/201.joint_Skirt_9_6/213.!joint_Skirt_10_6","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7/202.joint_Skirt_9_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/94.joint_Skirt_0_7/106.joint_Skirt_1_7/118.joint_Skirt_2_7/130.joint_Skirt_3_7/142.joint_Skirt_4_7/154.!joint_Skirt_5_7/166.joint_Skirt_6_7/178.joint_Skirt_7_7/190.joint_Skirt_8_7/202.joint_Skirt_9_7/214.!joint_Skirt_10_7","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8/203.joint_Skirt_9_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/95.joint_Skirt_0_8/107.joint_Skirt_1_8/119.joint_Skirt_2_8/131.joint_Skirt_3_8/143.joint_Skirt_4_8/155.joint_Skirt_5_8/167.joint_Skirt_6_8/179.joint_Skirt_7_8/191.joint_Skirt_8_8/203.joint_Skirt_9_8/215.!joint_Skirt_10_8","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9/204.joint_Skirt_9_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/96.!joint_Skirt_0_9/108.joint_Skirt_1_9/120.joint_Skirt_2_9/132.joint_Skirt_3_9/144.!joint_Skirt_4_9/156.joint_Skirt_5_9/168.joint_Skirt_6_9/180.joint_Skirt_7_9/192.!joint_Skirt_8_9/204.joint_Skirt_9_9/216.!joint_Skirt_10_9","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10/205.joint_Skirt_9_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/97.joint_Skirt_0_10/109.joint_Skirt_1_10/121.joint_Skirt_2_10/133.joint_Skirt_3_10/145.joint_Skirt_4_10/157.joint_Skirt_5_10/169.joint_Skirt_6_10/181.joint_Skirt_7_10/193.joint_Skirt_8_10/205.joint_Skirt_9_10/217.!joint_Skirt_10_10","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11/206.joint_Skirt_9_11","282.!Root/1.!joint_Master/2.!joint_Center/3.!joint_Center2/4.!joint_guru^bu/5.!joint_guru^bu2/6.!joint_Waist/98.joint_Skirt_0_11/110.joint_Skirt_1_11/122.joint_Skirt_2_11/134.joint_Skirt_3_11/146.joint_Skirt_4_11/158.!joint_Skirt_5_11/170.joint_Skirt_6_11/182.joint_Skirt_7_11/194.joint_Skirt_8_11/206.joint_Skirt_9_11/218.!joint_Skirt_10_11","282.!Root/1.!joint_Master/74.!IK_LeftHipParent","282.!Root/1.!joint_Master/74.!IK_LeftHipParent/70.!IK_LeftHip","282.!Root/1.!joint_Master/74.!IK_LeftHipParent/70.!IK_LeftHip/71.!IK_LeftToe","282.!Root/1.!joint_Master/75.!IK_RightHipParent","282.!Root/1.!joint_Master/75.!IK_RightHipParent/72.!IK_RightHip","282.!Root/1.!joint_Master/75.!IK_RightHipParent/72.!IK_RightHip/73.!IK_RightToe"],[[[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009369727922603488,-0.9452734589576721,-0.051281318068504333,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06797207146883011,-0.835262656211853,-0.02561047114431858,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07393646240234375,-0.8738264441490173,-0.03741028159856796,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06276028603315353,-0.4905835688114166,-0.05765167623758316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06198146939277649,-0.1211918443441391,0.0017207800410687923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0712292268872261,-0.03274185210466385,-0.0933724120259285,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07393646240234375,-0.8738264441490173,-0.03741028159856796,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06276028603315353,-0.4905835688114166,-0.05765167623758316,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.06198146939277649,-0.1211918443441391,0.0017207800410687923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.062019478529691696,-0.06168390437960625,-0.06225859001278877,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06797207146883011,-0.835262656211853,-0.02561047114431858,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07393646240234375,-0.873827338218689,-0.037410300225019455,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06276465207338333,-0.49055933952331543,-0.05718391761183739,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06198198348283768,-0.1211351752281189,0.001985392067581415,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07122904062271118,-0.03284759446978569,-0.0932578444480896,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07393646240234375,-0.873827338218689,-0.037410300225019455,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06276465207338333,-0.49055933952331543,-0.05718391761183739,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06198198348283768,-0.1211351752281189,0.001985392067581415,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.062019649893045425,-0.06166500225663185,-0.06217039003968239,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.024347474798560143,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.024347474798560143,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.6483827233314514,0,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-0.8772556781768799,0.019334007054567337,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-1.1615985329171963e-7,-0.9594677090644836,-0.053706951439380646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-3.2159005058929324e-7,-1.075741171836853,-0.05197480320930481,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-7.337343390645401e-7,-1.2401456832885742,-0.00038680803845636547,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-9.340284350400907e-7,-1.307875633239746,-0.010965957306325436,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0000010207168088527396,-1.3076056241989136,-0.0966591089963913,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000001038780624185165,-1.3134900331497192,-0.09667804092168808,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-1.6740195751190186,-6.2770686426461e-9,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.03534664958715439,-1.360243320465088,-0.06479596346616745,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.03534669056534767,-1.3602383136749268,-0.06479302048683167,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397393703460693,-1.4451022148132324,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.4020898342132568,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.3590770959854126,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397395193576813,-1.316064476966858,0.046577081084251404,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397396683692932,-1.2730519771575928,0.0465770922601223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397398173809052,-1.230039358139038,0.0465770922601223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15397393703460693,-1.187026858329773,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397393703460693,-1.4451022148132324,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.4020898342132568,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.3590770959854126,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397395193576813,-1.316064476966858,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397396683692932,-1.2730519771575928,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397398173809052,-1.230039358139038,0.046577077358961105,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15397393703460693,-1.187026858329773,0.04657707363367081,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.371170163154602,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.3515465259552002,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.331923007965088,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.3122996091842651,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.2926760911941528,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07859086245298386,-1.2730525732040405,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.371170163154602,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.3515465259552002,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.331923007965088,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.3122996091842651,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.2926760911941528,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07859086245298386,-1.2730525732040405,-0.05220678821206093,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.01637706160545349,-1.2164157629013062,0.0008112633368000388,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.01637706160545349,-1.2164157629013062,0.0008112633368000388,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09768278896808624,-1.1862224340438843,0.004933790769428015,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09768278896808624,-1.1862224340438843,0.004933790769428015,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.19982555508613586,-1.1164966821670532,0.0066027031280100346,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.26792073249816895,-1.0700128078460693,0.009258531965315342,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3549346923828125,-1.0106072425842285,0.004444525111466646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.41294407844543457,-0.9710036516189575,0.0012351871700957417,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.43495792150497437,-0.9321802258491516,-0.037316419184207916,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.44675305485725403,-0.9189010858535767,-0.04597673565149307,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47010597586631775,-0.9326149225234985,-0.016455821692943573,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49069759249687195,-0.9197836518287659,-0.01695275865495205,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5075092911720276,-0.9102887511253357,-0.016395334154367447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47003647685050964,-0.9337155818939209,0.0010584968840703368,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49465861916542053,-0.9210392236709595,0.0016590568702667952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5144239068031311,-0.9114320278167725,0.0021018695551902056,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.466781347990036,-0.9330201148986816,0.01722378097474575,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.49090656638145447,-0.9208900928497314,0.018862539902329445,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.5096108317375183,-0.9113840460777283,0.020131714642047882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.458944171667099,-0.933667778968811,0.02915101684629917,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.47691455483436584,-0.9228003025054932,0.03372807428240776,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.4891340136528015,-0.9151448011398315,0.035145796835422516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.4281214475631714,-0.9487501382827759,-0.02024015225470066,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3143281638622284,-1.038329839706421,0.006691062357276678,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.34333282709121704,-1.0185279846191406,0.005086393561214209,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.3723374605178833,-0.9987262487411499,0.003481724299490452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15055760741233826,-1.1501284837722778,0.005797713529318571,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18513895571231842,-1.1265220642089844,0.006362739019095898,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.21972031891345978,-1.1029157638549805,0.006927764508873224,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.016375696286559105,-1.2164157629013062,0.0008112784707918763,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.016375696286559105,-1.2164157629013062,0.0008112784707918763,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09768185764551163,-1.1862232685089111,0.004932896234095097,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09768185764551163,-1.1862232685089111,0.004932896234095097,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1998250037431717,-1.1164976358413696,0.0066023534163832664,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2679204046726227,-1.0700138807296753,0.009258589707314968,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.3549347221851349,-1.0106089115142822,0.004444597754627466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.41294440627098083,-0.9710054993629456,0.0012352693593129516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.43495792150497437,-0.9321802258491516,-0.037316419184207916,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.44675305485725403,-0.9189010858535767,-0.04597673565149307,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47010597586631775,-0.9326149225234985,-0.016455821692943573,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49069759249687195,-0.9197836518287659,-0.01695275865495205,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5075092911720276,-0.9102887511253357,-0.016395334154367447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47003647685050964,-0.9337155818939209,0.0010584968840703368,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49465861916542053,-0.9210392236709595,0.0016590568702667952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5144239068031311,-0.9114320278167725,0.0021018695551902056,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.466781347990036,-0.9330201148986816,0.01722378097474575,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.49090656638145447,-0.9208900928497314,0.018862539902329445,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.5096108317375183,-0.9113840460777283,0.020131714642047882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.458944171667099,-0.933667778968811,0.02915101684629917,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.47691455483436584,-0.9228003025054932,0.03372807428240776,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4891340136528015,-0.9151448011398315,0.035145796835422516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.4281214475631714,-0.9487501382827759,-0.02024015225470066,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.3143281042575836,-1.0383312702178955,0.006691125687211752,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.34333282709121704,-1.0185295343399048,0.005086462013423443,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.37233760952949524,-0.9987278580665588,0.0034817985724657774,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15055766701698303,-1.1501288414001465,0.005797113757580519,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18513891100883484,-1.1265227794647217,0.006362320389598608,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.21972009539604187,-1.1029165983200073,0.006927525624632835,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0,-1.1073859930038452,-0.04523973539471626,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04025549069046974,-1.1661348342895508,-0.041306838393211365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04859594255685806,-1.1651637554168701,-0.1077963188290596,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04759305343031883,-1.1021696329116821,-0.11584270745515823,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.041895948350429535,-1.0980476140975952,-0.03511019051074982,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.047766704112291336,-1.1058318614959717,-0.11542310565710068,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04025549069046974,-1.1661348342895508,-0.041306838393211365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04860157147049904,-1.1652319431304932,-0.10779662430286407,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04759307950735092,-1.1021696329116821,-0.11584270745515823,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.041895948350429535,-1.0980474948883057,-0.03511018678545952,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04776671901345253,-1.1058318614959717,-0.11542310565710068,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.011671229265630245,-1.1513237953186035,0.05953005328774452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.028438976034522057,-1.0964789390563965,0.07454734295606613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.04520672187209129,-1.0416340827941895,0.08956465125083923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061974458396434784,-0.9867892265319824,0.10458194464445114,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07874220609664917,-0.9319444298744202,0.11959924548864365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09550994634628296,-0.8770996928215027,0.13461653888225555,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11227770149707794,-0.8222547769546509,0.14963383972644806,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.011671229265630245,-1.1513237953186035,0.05953005328774452,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.028438976034522057,-1.0964789390563965,0.07454734295606613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.04520672187209129,-1.0416340827941895,0.08956465125083923,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.061974458396434784,-0.9867892265319824,0.10458194464445114,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07874220609664917,-0.9319444298744202,0.11959924548864365,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09550994634628296,-0.8770996928215027,0.13461653888225555,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11227770149707794,-0.8222547769546509,0.14963383972644806,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000201475850190036,-0.9722418785095215,-0.14919115602970123,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0005892250337637961,-0.9239920973777771,-0.1586616188287735,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0008191264350898564,-0.8816412091255188,-0.1650460809469223,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.000965782324783504,-0.8338497281074524,-0.17199371755123138,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009260521037504077,-0.7894641160964966,-0.1787613332271576,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0009855821263045073,-0.7472310662269592,-0.1858702152967453,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0010774799156934023,-0.701810359954834,-0.19390098750591278,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0012344050919637084,-0.6598654389381409,-0.2025604248046875,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0013817251892760396,-0.6163104772567749,-0.2116517871618271,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0015554085839539766,-0.5745835900306702,-0.22130489349365234,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-4.080094484493202e-9,-0.5572226047515869,-0.25504016876220703,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.05321946740150452,-0.9728043079376221,-0.13540484011173248,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0611422061920166,-0.9249567985534668,-0.14386670291423798,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0675448477268219,-0.8828677535057068,-0.14998666942119598,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07445405423641205,-0.8353849649429321,-0.15652896463871002,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0812188908457756,-0.7914832234382629,-0.16406452655792236,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08782433718442917,-0.7495759725570679,-0.1711609959602356,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09488879889249802,-0.7045367956161499,-0.17913827300071716,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1021132692694664,-0.6629012227058411,-0.1871805638074875,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.10954880714416504,-0.6196542978286743,-0.19552777707576752,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11718635261058807,-0.5782843232154846,-0.20450741052627563,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.130685955286026,-0.5597018599510193,-0.22679835557937622,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09593209624290466,-0.9758880138397217,-0.09968416392803192,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11572341620922089,-0.9314195513725281,-0.10890156030654907,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.12923936545848846,-0.8905090093612671,-0.11479897797107697,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14030171930789948,-0.8434211015701294,-0.11923663318157196,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15148168802261353,-0.7996677160263062,-0.12370835244655609,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16206768155097961,-0.7577650547027588,-0.12778683006763458,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.17318931221961975,-0.7127749919891357,-0.13230259716510773,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18496829271316528,-0.6712863445281982,-0.137281134724617,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.19722120463848114,-0.6283156275749207,-0.14264149963855743,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.21037189662456512,-0.5873606204986572,-0.14853769540786743,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.22635473310947418,-0.5645979046821594,-0.1496460735797882,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1114485040307045,-0.9743480086326599,-0.04414033517241478,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.13091173768043518,-0.9350237846374512,-0.04416065663099289,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14916199445724487,-0.8920276761054993,-0.04435349628329277,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16183798015117645,-0.8447558879852295,-0.04497577250003815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.17314064502716064,-0.8004806637763977,-0.045621003955602646,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.18378786742687225,-0.7564495801925659,-0.04648859426379204,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1949332356452942,-0.7142102122306824,-0.04765273630619049,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.20709916949272156,-0.6706497669219971,-0.04886495694518089,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.2207784652709961,-0.6274816393852234,-0.05000613257288933,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.23508237302303314,-0.586201548576355,-0.051051389425992966,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.261371910572052,-0.5668437480926514,-0.04426753148436546,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.09435383975505829,-0.9739401936531067,-0.003538561752066016,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.10665377974510193,-0.9322013258934021,0.0028366604819893837,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1195690855383873,-0.8874881267547607,0.009444979019463062,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.13234521448612213,-0.8404097557067871,0.016443787142634392,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.14393627643585205,-0.7963565587997437,0.02286320924758911,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.15477345883846283,-0.7523983716964722,0.028403766453266144,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.16548052430152893,-0.7100666761398315,0.03378380462527275,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1767299324274063,-0.666240930557251,0.039458952844142914,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1886899322271347,-0.6226159930229187,0.045453835278749466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.20093034207820892,-0.5807821750640869,0.0514611192047596,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.226354718208313,-0.5639346837997437,0.06943868845701218,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.05480232089757919,-0.974610447883606,0.027252409607172012,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.062322381883859634,-0.932665228843689,0.039828862994909286,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.07066367566585541,-0.8881426453590393,0.05432049185037613,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0772334411740303,-0.8397971987724304,0.06412467360496521,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08315979689359665,-0.7945641875267029,0.07280652970075607,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.08907182514667511,-0.7498291730880737,0.08201833069324493,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0947408676147461,-0.7066192030906677,0.09060320258140564,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1006765067577362,-0.661895751953125,0.09969829767942429,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1071922704577446,-0.6174256801605225,0.10973715782165527,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.11412540078163147,-0.5748741626739502,0.1204342469573021,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.1306859701871872,-0.5585532188415527,0.15266753733158112,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00003861331060761586,-0.9742681384086609,0.03728646785020828,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00007370582898147404,-0.931037962436676,0.04832440987229347,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00013631631736643612,-0.8846620321273804,0.059495095163583755,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00004837480082642287,-0.8358415365219116,0.07039307057857513,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.00020196962577756494,-0.7902050018310547,0.08008309453725815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0006517158471979201,-0.7449598908424377,0.08968555182218552,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0009354908252134919,-0.7013474106788635,0.09911472350358963,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0011437044013291597,-0.6562471985816956,0.10922586172819138,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0013765296898782253,-0.6114715337753296,0.12075980007648468,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0016984189860522747,-0.568547785282135,0.13292764127254486,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,1.4751110555266678e-8,-0.5558961629867554,0.18312935531139374,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.054611820727586746,-0.9744089245796204,0.026644639670848846,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06237895041704178,-0.932548463344574,0.039362672716379166,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07113239169120789,-0.8882089257240295,0.05405944213271141,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07796938717365265,-0.8399866223335266,0.06422466039657593,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.08431486040353775,-0.7947545647621155,0.07261218875646591,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09060870110988617,-0.7498478889465332,0.08059490472078323,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09697914868593216,-0.706676721572876,0.08887720853090286,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10372986644506454,-0.662110447883606,0.09804249554872513,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11100684851408005,-0.6177816390991211,0.10814370959997177,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11852095276117325,-0.5752485394477844,0.1185176745057106,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1306859254837036,-0.5585532188415527,0.1526675671339035,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09445957839488983,-0.9740180969238281,-0.003198588266968727,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10690294951200485,-0.9323270320892334,0.0032133073545992374,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.12003155797719955,-0.8876794576644897,0.009903966449201107,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13279490172863007,-0.8404514789581299,0.016049599274992943,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1445215940475464,-0.7963048815727234,0.02166743203997612,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15490631759166718,-0.7520984411239624,0.026063881814479828,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.16569198668003082,-0.7096750736236572,0.030472831800580025,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17725025117397308,-0.6658185720443726,0.035158440470695496,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18943540751934052,-0.6221289038658142,0.04017094522714615,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.20192711055278778,-0.5802738666534424,0.04547084867954254,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2263546884059906,-0.5639347434043884,0.0694386214017868,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11121190339326859,-0.9742534160614014,-0.04421302303671837,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1309155523777008,-0.9350387454032898,-0.044126272201538086,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.14983254671096802,-0.8893821835517883,-0.0439801923930645,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1610691249370575,-0.8471910953521729,-0.04468221962451935,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17447324097156525,-0.8008338212966919,-0.045133017003536224,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18727929890155792,-0.7573923468589783,-0.046168338507413864,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.19961294531822205,-0.7154890298843384,-0.04749053344130516,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2126602977514267,-0.6713172197341919,-0.04887145385146141,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2267225831747055,-0.6299650073051453,-0.050278134644031525,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.24134185910224915,-0.5879727005958557,-0.051660824567079544,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2613718807697296,-0.5668437480926514,-0.04426756501197815,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09643775969743729,-0.9728219509124756,-0.0996694564819336,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11328813433647156,-0.9333850741386414,-0.10726290941238403,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13009387254714966,-0.8878032565116882,-0.11401326209306717,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.14073750376701355,-0.8458969593048096,-0.11766349524259567,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.15236201882362366,-0.7995477318763733,-0.12230784446001053,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.16275908052921295,-0.75596022605896,-0.1266995668411255,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.17323821783065796,-0.714051365852356,-0.13100646436214447,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.18422387540340424,-0.6698259711265564,-0.13569019734859467,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.1963694542646408,-0.6285068988800049,-0.14118042588233948,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.20899267494678497,-0.5865537524223328,-0.1470625102519989,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.2263546884059906,-0.5645979046821594,-0.1496460884809494,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0543171726167202,-0.9702475666999817,-0.13755592703819275,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.060864634811878204,-0.9283533692359924,-0.1447409689426422,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06833530962467194,-0.8808549642562866,-0.15295270085334778,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.07416108250617981,-0.8387351036071777,-0.1594380885362625,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0801144614815712,-0.7918815016746521,-0.16661080718040466,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.08595883101224899,-0.7480621337890625,-0.17301645874977112,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.09184194356203079,-0.706014096736908,-0.1799231916666031,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0979333147406578,-0.6616038680076599,-0.18755386769771576,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.10451994836330414,-0.6199263334274292,-0.19592025876045227,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.11131618171930313,-0.5775042176246643,-0.20462970435619354,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.13068589568138123,-0.5597018599510193,-0.22679835557937622,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061947163194417953,0.0643671303987503,0.0008501767879351974,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.061947163194417953,-0.11906889826059341,0.0020476914942264557,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,-0.0712297111749649,-0.03192993253469467,-0.09424827247858047,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.061947163194417953,0.0643671303987503,0.0008501767879351974,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.06194929778575897,-0.11906922608613968,0.0020466106943786144,1],[7,1,0,0,0,0,1,0,0,0,0,1,0,0.0712297111749649,-0.03192991390824318,-0.09424828737974167,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[29,[{}]]],0,0,[0],[2],[0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[6,0]],[[{"name":"default_radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"packable":true}],[1],0,[0],[4],[49]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[2,0]],[[[4,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{},{}],[{"USE_ALBEDO_MAP":true},{},{},{}],[[[{},"mainTexture",6,0],{},{},{}],11,0,0,0]]],0,0,[0,0],[3,2],[7,0]]]]
